ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB134:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "i2c.h"
  24:Src/main.c    **** #include "rtc.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** #include "oleds.h"
  30:Src/main.c    **** #include "stdio.h"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 2


  31:Src/main.c    **** /* USER CODE END Includes */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** RTC_DateTypeDef sdatestructure;
  36:Src/main.c    **** RTC_TimeTypeDef stimestructure;
  37:Src/main.c    **** /* USER CODE END PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PD */
  41:Src/main.c    **** /* USER CODE END PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /**
  66:Src/main.c    ****   * @brief  The application entry point.
  67:Src/main.c    ****   * @retval int
  68:Src/main.c    ****   */
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
  72:Src/main.c    ****   char buffer[25];
  73:Src/main.c    ****   /* USER CODE END 1 */
  74:Src/main.c    ****   
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Configure the system clock */
  86:Src/main.c    ****   SystemClock_Config();
  87:Src/main.c    **** 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 3


  88:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Initialize all configured peripherals */
  93:Src/main.c    ****   MX_GPIO_Init();
  94:Src/main.c    ****   MX_RTC_Init();
  95:Src/main.c    ****   MX_I2C1_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   OLED_Init();
  98:Src/main.c    ****   OLED_CLS();
  99:Src/main.c    ****   OLED_ShowStr(1,0,(uint8_t *)"Designed by Joe_joe",1);
 100:Src/main.c    ****   /* USER CODE END 2 */
 101:Src/main.c    ****  
 102:Src/main.c    ****  
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Infinite loop */
 105:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 106:Src/main.c    ****   while (1)
 107:Src/main.c    ****   {
 108:Src/main.c    ****     /* USER CODE END WHILE */
 109:Src/main.c    **** 
 110:Src/main.c    ****     /* USER CODE BEGIN 3 */
 111:Src/main.c    ****     HAL_RTC_GetTime(&hrtc,&stimestructure,RTC_FORMAT_BCD);
 112:Src/main.c    ****     sprintf((char*)buffer,"%02d:%02d:%02d",stimestructure.Hours,stimestructure.Minutes,stimestructu
 113:Src/main.c    ****     OLED_ShowStr(1,1,(uint8_t *)buffer,1);
 114:Src/main.c    ****     HAL_RTC_GetDate(&hrtc,&sdatestructure,RTC_FORMAT_BCD);
 115:Src/main.c    ****     sprintf((char*)buffer,"20%02d:%02d:%02d",sdatestructure.Year,sdatestructure.Month,sdatestructur
 116:Src/main.c    ****     OLED_ShowStr(1,2,(uint8_t *)buffer,1);
 117:Src/main.c    ****     HAL_GPIO_TogglePin(D1_GPIO_Port, D1_Pin);
 118:Src/main.c    ****     HAL_Delay(1000);
 119:Src/main.c    ****   }
 120:Src/main.c    ****   /* USER CODE END 3 */
 121:Src/main.c    **** }
 122:Src/main.c    **** 
 123:Src/main.c    **** /**
 124:Src/main.c    ****   * @brief System Clock Configuration
 125:Src/main.c    ****   * @retval None
 126:Src/main.c    ****   */
 127:Src/main.c    **** void SystemClock_Config(void)
 128:Src/main.c    **** {
  29              		.loc 1 128 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 96
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 98B0     		sub	sp, sp, #96
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 112
 129:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  43              		.loc 1 129 3 view .LVU1
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 4


  44              		.loc 1 129 22 is_stmt 0 view .LVU2
  45 0004 3022     		movs	r2, #48
  46 0006 0021     		movs	r1, #0
  47 0008 0DEB0200 		add	r0, sp, r2
  48 000c FFF7FEFF 		bl	memset
  49              	.LVL0:
 130:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  50              		.loc 1 130 3 is_stmt 1 view .LVU3
  51              		.loc 1 130 22 is_stmt 0 view .LVU4
  52 0010 0024     		movs	r4, #0
  53 0012 0794     		str	r4, [sp, #28]
  54 0014 0894     		str	r4, [sp, #32]
  55 0016 0994     		str	r4, [sp, #36]
  56 0018 0A94     		str	r4, [sp, #40]
  57 001a 0B94     		str	r4, [sp, #44]
 131:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  58              		.loc 1 131 3 is_stmt 1 view .LVU5
  59              		.loc 1 131 28 is_stmt 0 view .LVU6
  60 001c 0394     		str	r4, [sp, #12]
  61 001e 0494     		str	r4, [sp, #16]
  62 0020 0594     		str	r4, [sp, #20]
  63 0022 0694     		str	r4, [sp, #24]
 132:Src/main.c    **** 
 133:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 134:Src/main.c    ****   */
 135:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  64              		.loc 1 135 3 is_stmt 1 view .LVU7
  65              	.LBB2:
  66              		.loc 1 135 3 view .LVU8
  67 0024 0194     		str	r4, [sp, #4]
  68              		.loc 1 135 3 view .LVU9
  69 0026 214B     		ldr	r3, .L3
  70 0028 1A6C     		ldr	r2, [r3, #64]
  71 002a 42F08052 		orr	r2, r2, #268435456
  72 002e 1A64     		str	r2, [r3, #64]
  73              		.loc 1 135 3 view .LVU10
  74 0030 1B6C     		ldr	r3, [r3, #64]
  75 0032 03F08053 		and	r3, r3, #268435456
  76 0036 0193     		str	r3, [sp, #4]
  77              		.loc 1 135 3 view .LVU11
  78 0038 019B     		ldr	r3, [sp, #4]
  79              	.LBE2:
  80              		.loc 1 135 3 view .LVU12
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  81              		.loc 1 136 3 view .LVU13
  82              	.LBB3:
  83              		.loc 1 136 3 view .LVU14
  84 003a 0294     		str	r4, [sp, #8]
  85              		.loc 1 136 3 view .LVU15
  86 003c 1C4B     		ldr	r3, .L3+4
  87 003e 1A68     		ldr	r2, [r3]
  88 0040 42F48042 		orr	r2, r2, #16384
  89 0044 1A60     		str	r2, [r3]
  90              		.loc 1 136 3 view .LVU16
  91 0046 1B68     		ldr	r3, [r3]
  92 0048 03F48043 		and	r3, r3, #16384
  93 004c 0293     		str	r3, [sp, #8]
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 5


  94              		.loc 1 136 3 view .LVU17
  95 004e 029B     		ldr	r3, [sp, #8]
  96              	.LBE3:
  97              		.loc 1 136 3 view .LVU18
 137:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****   */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
  98              		.loc 1 139 3 view .LVU19
  99              		.loc 1 139 36 is_stmt 0 view .LVU20
 100 0050 0526     		movs	r6, #5
 101 0052 0C96     		str	r6, [sp, #48]
 140:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 102              		.loc 1 140 3 is_stmt 1 view .LVU21
 103              		.loc 1 140 30 is_stmt 0 view .LVU22
 104 0054 4FF48033 		mov	r3, #65536
 105 0058 0D93     		str	r3, [sp, #52]
 141:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 106              		.loc 1 141 3 is_stmt 1 view .LVU23
 107              		.loc 1 141 30 is_stmt 0 view .LVU24
 108 005a 0123     		movs	r3, #1
 109 005c 0E93     		str	r3, [sp, #56]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 110              		.loc 1 142 3 is_stmt 1 view .LVU25
 111              		.loc 1 142 34 is_stmt 0 view .LVU26
 112 005e 0225     		movs	r5, #2
 113 0060 1295     		str	r5, [sp, #72]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 114              		.loc 1 143 3 is_stmt 1 view .LVU27
 115              		.loc 1 143 35 is_stmt 0 view .LVU28
 116 0062 4FF48003 		mov	r3, #4194304
 117 0066 1393     		str	r3, [sp, #76]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 118              		.loc 1 144 3 is_stmt 1 view .LVU29
 119              		.loc 1 144 30 is_stmt 0 view .LVU30
 120 0068 0823     		movs	r3, #8
 121 006a 1493     		str	r3, [sp, #80]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 122              		.loc 1 145 3 is_stmt 1 view .LVU31
 123              		.loc 1 145 30 is_stmt 0 view .LVU32
 124 006c 4FF4A873 		mov	r3, #336
 125 0070 1593     		str	r3, [sp, #84]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 126              		.loc 1 146 3 is_stmt 1 view .LVU33
 127              		.loc 1 146 30 is_stmt 0 view .LVU34
 128 0072 1695     		str	r5, [sp, #88]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 129              		.loc 1 147 3 is_stmt 1 view .LVU35
 130              		.loc 1 147 30 is_stmt 0 view .LVU36
 131 0074 0423     		movs	r3, #4
 132 0076 1793     		str	r3, [sp, #92]
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133              		.loc 1 148 3 is_stmt 1 view .LVU37
 134              		.loc 1 148 7 is_stmt 0 view .LVU38
 135 0078 0CA8     		add	r0, sp, #48
 136 007a FFF7FEFF 		bl	HAL_RCC_OscConfig
 137              	.LVL1:
 149:Src/main.c    ****   {
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 6


 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 153:Src/main.c    ****   */
 154:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138              		.loc 1 154 3 is_stmt 1 view .LVU39
 139              		.loc 1 154 31 is_stmt 0 view .LVU40
 140 007e 0F23     		movs	r3, #15
 141 0080 0793     		str	r3, [sp, #28]
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 142              		.loc 1 156 3 is_stmt 1 view .LVU41
 143              		.loc 1 156 34 is_stmt 0 view .LVU42
 144 0082 0895     		str	r5, [sp, #32]
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145              		.loc 1 157 3 is_stmt 1 view .LVU43
 146              		.loc 1 157 35 is_stmt 0 view .LVU44
 147 0084 0994     		str	r4, [sp, #36]
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 148              		.loc 1 158 3 is_stmt 1 view .LVU45
 149              		.loc 1 158 36 is_stmt 0 view .LVU46
 150 0086 4FF4A053 		mov	r3, #5120
 151 008a 0A93     		str	r3, [sp, #40]
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 152              		.loc 1 159 3 is_stmt 1 view .LVU47
 153              		.loc 1 159 36 is_stmt 0 view .LVU48
 154 008c 4FF48053 		mov	r3, #4096
 155 0090 0B93     		str	r3, [sp, #44]
 160:Src/main.c    **** 
 161:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 156              		.loc 1 161 3 is_stmt 1 view .LVU49
 157              		.loc 1 161 7 is_stmt 0 view .LVU50
 158 0092 3146     		mov	r1, r6
 159 0094 07A8     		add	r0, sp, #28
 160 0096 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 161              	.LVL2:
 162:Src/main.c    ****   {
 163:Src/main.c    ****     Error_Handler();
 164:Src/main.c    ****   }
 165:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 162              		.loc 1 165 3 is_stmt 1 view .LVU51
 163              		.loc 1 165 44 is_stmt 0 view .LVU52
 164 009a 0395     		str	r5, [sp, #12]
 166:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 165              		.loc 1 166 3 is_stmt 1 view .LVU53
 166              		.loc 1 166 41 is_stmt 0 view .LVU54
 167 009c 4FF48073 		mov	r3, #256
 168 00a0 0693     		str	r3, [sp, #24]
 167:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 169              		.loc 1 167 3 is_stmt 1 view .LVU55
 170              		.loc 1 167 7 is_stmt 0 view .LVU56
 171 00a2 03A8     		add	r0, sp, #12
 172 00a4 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 173              	.LVL3:
 168:Src/main.c    ****   {
 169:Src/main.c    ****     Error_Handler();
 170:Src/main.c    ****   }
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 7


 171:Src/main.c    **** }
 174              		.loc 1 171 1 view .LVU57
 175 00a8 18B0     		add	sp, sp, #96
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 16
 178              		@ sp needed
 179 00aa 70BD     		pop	{r4, r5, r6, pc}
 180              	.L4:
 181              		.align	2
 182              	.L3:
 183 00ac 00380240 		.word	1073887232
 184 00b0 00700040 		.word	1073770496
 185              		.cfi_endproc
 186              	.LFE134:
 188              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 189              		.align	2
 190              	.LC0:
 191 0000 44657369 		.ascii	"Designed by Joe_joe\000"
 191      676E6564 
 191      20627920 
 191      4A6F655F 
 191      6A6F6500 
 192              		.align	2
 193              	.LC1:
 194 0014 25303264 		.ascii	"%02d:%02d:%02d\000"
 194      3A253032 
 194      643A2530 
 194      326400
 195 0023 00       		.align	2
 196              	.LC2:
 197 0024 32302530 		.ascii	"20%02d:%02d:%02d\000"
 197      32643A25 
 197      3032643A 
 197      25303264 
 197      00
 198              		.section	.text.main,"ax",%progbits
 199              		.align	1
 200              		.global	main
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	main:
 207              	.LFB133:
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
 208              		.loc 1 70 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ Volatile: function does not return.
 211              		@ args = 0, pretend = 0, frame = 32
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 00B5     		push	{lr}
 214              	.LCFI3:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 14, -4
 217 0002 8BB0     		sub	sp, sp, #44
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 48
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 8


  72:Src/main.c    ****   /* USER CODE END 1 */
 220              		.loc 1 72 3 view .LVU59
  79:Src/main.c    **** 
 221              		.loc 1 79 3 view .LVU60
 222 0004 FFF7FEFF 		bl	HAL_Init
 223              	.LVL4:
  86:Src/main.c    **** 
 224              		.loc 1 86 3 view .LVU61
 225 0008 FFF7FEFF 		bl	SystemClock_Config
 226              	.LVL5:
  93:Src/main.c    ****   MX_RTC_Init();
 227              		.loc 1 93 3 view .LVU62
 228 000c FFF7FEFF 		bl	MX_GPIO_Init
 229              	.LVL6:
  94:Src/main.c    ****   MX_I2C1_Init();
 230              		.loc 1 94 3 view .LVU63
 231 0010 FFF7FEFF 		bl	MX_RTC_Init
 232              	.LVL7:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 233              		.loc 1 95 3 view .LVU64
 234 0014 FFF7FEFF 		bl	MX_I2C1_Init
 235              	.LVL8:
  97:Src/main.c    ****   OLED_CLS();
 236              		.loc 1 97 3 view .LVU65
 237 0018 FFF7FEFF 		bl	OLED_Init
 238              	.LVL9:
  98:Src/main.c    ****   OLED_ShowStr(1,0,(uint8_t *)"Designed by Joe_joe",1);
 239              		.loc 1 98 3 view .LVU66
 240 001c FFF7FEFF 		bl	OLED_CLS
 241              	.LVL10:
  99:Src/main.c    ****   /* USER CODE END 2 */
 242              		.loc 1 99 3 view .LVU67
 243 0020 0123     		movs	r3, #1
 244 0022 1C4A     		ldr	r2, .L8
 245 0024 0021     		movs	r1, #0
 246 0026 1846     		mov	r0, r3
 247 0028 FFF7FEFF 		bl	OLED_ShowStr
 248              	.LVL11:
 249              	.L6:
 106:Src/main.c    ****   {
 250              		.loc 1 106 3 discriminator 1 view .LVU68
 111:Src/main.c    ****     sprintf((char*)buffer,"%02d:%02d:%02d",stimestructure.Hours,stimestructure.Minutes,stimestructu
 251              		.loc 1 111 5 discriminator 1 view .LVU69
 252 002c 1A4C     		ldr	r4, .L8+4
 253 002e 1B4D     		ldr	r5, .L8+8
 254 0030 0122     		movs	r2, #1
 255 0032 2146     		mov	r1, r4
 256 0034 2846     		mov	r0, r5
 257 0036 FFF7FEFF 		bl	HAL_RTC_GetTime
 258              	.LVL12:
 112:Src/main.c    ****     OLED_ShowStr(1,1,(uint8_t *)buffer,1);
 259              		.loc 1 112 5 discriminator 1 view .LVU70
 112:Src/main.c    ****     OLED_ShowStr(1,1,(uint8_t *)buffer,1);
 260              		.loc 1 112 102 is_stmt 0 discriminator 1 view .LVU71
 261 003a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 112:Src/main.c    ****     OLED_ShowStr(1,1,(uint8_t *)buffer,1);
 262              		.loc 1 112 5 discriminator 1 view .LVU72
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 9


 263 003c 0093     		str	r3, [sp]
 264 003e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 265 0040 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 266 0042 1749     		ldr	r1, .L8+12
 267 0044 03A8     		add	r0, sp, #12
 268 0046 FFF7FEFF 		bl	sprintf
 269              	.LVL13:
 113:Src/main.c    ****     HAL_RTC_GetDate(&hrtc,&sdatestructure,RTC_FORMAT_BCD);
 270              		.loc 1 113 5 is_stmt 1 discriminator 1 view .LVU73
 271 004a 0123     		movs	r3, #1
 272 004c 03AA     		add	r2, sp, #12
 273 004e 1946     		mov	r1, r3
 274 0050 1846     		mov	r0, r3
 275 0052 FFF7FEFF 		bl	OLED_ShowStr
 276              	.LVL14:
 114:Src/main.c    ****     sprintf((char*)buffer,"20%02d:%02d:%02d",sdatestructure.Year,sdatestructure.Month,sdatestructur
 277              		.loc 1 114 5 discriminator 1 view .LVU74
 278 0056 134C     		ldr	r4, .L8+16
 279 0058 0122     		movs	r2, #1
 280 005a 2146     		mov	r1, r4
 281 005c 2846     		mov	r0, r5
 282 005e FFF7FEFF 		bl	HAL_RTC_GetDate
 283              	.LVL15:
 115:Src/main.c    ****     OLED_ShowStr(1,2,(uint8_t *)buffer,1);
 284              		.loc 1 115 5 discriminator 1 view .LVU75
 115:Src/main.c    ****     OLED_ShowStr(1,2,(uint8_t *)buffer,1);
 285              		.loc 1 115 101 is_stmt 0 discriminator 1 view .LVU76
 286 0062 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 115:Src/main.c    ****     OLED_ShowStr(1,2,(uint8_t *)buffer,1);
 287              		.loc 1 115 5 discriminator 1 view .LVU77
 288 0064 0093     		str	r3, [sp]
 289 0066 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 290 0068 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 291 006a 0F49     		ldr	r1, .L8+20
 292 006c 03A8     		add	r0, sp, #12
 293 006e FFF7FEFF 		bl	sprintf
 294              	.LVL16:
 116:Src/main.c    ****     HAL_GPIO_TogglePin(D1_GPIO_Port, D1_Pin);
 295              		.loc 1 116 5 is_stmt 1 discriminator 1 view .LVU78
 296 0072 0123     		movs	r3, #1
 297 0074 03AA     		add	r2, sp, #12
 298 0076 0221     		movs	r1, #2
 299 0078 1846     		mov	r0, r3
 300 007a FFF7FEFF 		bl	OLED_ShowStr
 301              	.LVL17:
 117:Src/main.c    ****     HAL_Delay(1000);
 302              		.loc 1 117 5 discriminator 1 view .LVU79
 303 007e 4FF40071 		mov	r1, #512
 304 0082 0A48     		ldr	r0, .L8+24
 305 0084 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 306              	.LVL18:
 118:Src/main.c    ****   }
 307              		.loc 1 118 5 discriminator 1 view .LVU80
 308 0088 4FF47A70 		mov	r0, #1000
 309 008c FFF7FEFF 		bl	HAL_Delay
 310              	.LVL19:
 106:Src/main.c    ****   {
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 10


 311              		.loc 1 106 9 discriminator 1 view .LVU81
 312 0090 CCE7     		b	.L6
 313              	.L9:
 314 0092 00BF     		.align	2
 315              	.L8:
 316 0094 00000000 		.word	.LC0
 317 0098 00000000 		.word	stimestructure
 318 009c 00000000 		.word	hrtc
 319 00a0 14000000 		.word	.LC1
 320 00a4 00000000 		.word	sdatestructure
 321 00a8 24000000 		.word	.LC2
 322 00ac 00140240 		.word	1073878016
 323              		.cfi_endproc
 324              	.LFE133:
 326              		.section	.text.Error_Handler,"ax",%progbits
 327              		.align	1
 328              		.global	Error_Handler
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv4-sp-d16
 334              	Error_Handler:
 335              	.LFB135:
 172:Src/main.c    **** 
 173:Src/main.c    **** /* USER CODE BEGIN 4 */
 174:Src/main.c    **** 
 175:Src/main.c    **** /* USER CODE END 4 */
 176:Src/main.c    **** 
 177:Src/main.c    **** /**
 178:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 179:Src/main.c    ****   * @retval None
 180:Src/main.c    ****   */
 181:Src/main.c    **** void Error_Handler(void)
 182:Src/main.c    **** {
 336              		.loc 1 182 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 183:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 184:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 187:Src/main.c    **** }
 341              		.loc 1 187 1 view .LVU83
 342 0000 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE135:
 346              		.comm	stimestructure,20,4
 347              		.comm	sdatestructure,4,4
 348              		.text
 349              	.Letext0:
 350              		.file 2 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_defa
 351              		.file 3 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h
 352              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 353              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 354              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 11


 355              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 356              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 357              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 358              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 359              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 360              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 361              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 362              		.file 14 "Inc/i2c.h"
 363              		.file 15 "Inc/rtc.h"
 364              		.file 16 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 365              		.file 17 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h
 366              		.file 18 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\inclu
 367              		.file 19 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 368              		.file 20 "Inc/gpio.h"
 369              		.file 21 "Inc/oleds.h"
 370              		.file 22 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\stdio.h"
 371              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 372              		.file 24 "<built-in>"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:18     .text.SystemClock_Config:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:26     .text.SystemClock_Config:00000000 SystemClock_Config
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:183    .text.SystemClock_Config:000000ac $d
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:189    .rodata.main.str1.4:00000000 $d
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:199    .text.main:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:206    .text.main:00000000 main
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:316    .text.main:00000094 $d
                            *COM*:00000014 stimestructure
                            *COM*:00000004 sdatestructure
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:327    .text.Error_Handler:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\cc0aKCjT.s:334    .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_RTC_Init
MX_I2C1_Init
OLED_Init
OLED_CLS
OLED_ShowStr
HAL_RTC_GetTime
sprintf
HAL_RTC_GetDate
HAL_GPIO_TogglePin
HAL_Delay
hrtc
