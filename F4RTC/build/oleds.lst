ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oleds.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WriteCmd,"ax",%progbits
  18              		.align	1
  19              		.global	WriteCmd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	WriteCmd:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Src/oleds.c"
   1:Src/oleds.c   **** #include "oleds.h"
   2:Src/oleds.c   **** #include "ascii.h"
   3:Src/oleds.c   **** #include "main.h"
   4:Src/oleds.c   **** #include "stm32f4xx_hal.h"
   5:Src/oleds.c   **** void WriteCmd(unsigned char I2C_Command)//写命令
   6:Src/oleds.c   ****  {
  30              		.loc 1 6 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 6 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 87B0     		sub	sp, sp, #28
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 32
  42 0004 8DF81700 		strb	r0, [sp, #23]
   7:Src/oleds.c   **** 
   8:Src/oleds.c   **** 		HAL_I2C_Mem_Write(&hi2c1,OLED0561_ADD,COM,I2C_MEMADD_SIZE_8BIT,&I2C_Command,1,100);
  43              		.loc 1 8 3 is_stmt 1 view .LVU2
  44 0008 6423     		movs	r3, #100
  45 000a 0293     		str	r3, [sp, #8]
  46 000c 0123     		movs	r3, #1
  47 000e 0193     		str	r3, [sp, #4]
  48 0010 0DF11702 		add	r2, sp, #23
  49 0014 0092     		str	r2, [sp]
  50 0016 0022     		movs	r2, #0
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 2


  51 0018 7821     		movs	r1, #120
  52 001a 0348     		ldr	r0, .L3
  53              	.LVL1:
  54              		.loc 1 8 3 is_stmt 0 view .LVU3
  55 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
  56              	.LVL2:
   9:Src/oleds.c   **** 	
  10:Src/oleds.c   ****  }
  57              		.loc 1 10 2 view .LVU4
  58 0020 07B0     		add	sp, sp, #28
  59              	.LCFI2:
  60              		.cfi_def_cfa_offset 4
  61              		@ sp needed
  62 0022 5DF804FB 		ldr	pc, [sp], #4
  63              	.L4:
  64 0026 00BF     		.align	2
  65              	.L3:
  66 0028 00000000 		.word	hi2c1
  67              		.cfi_endproc
  68              	.LFE130:
  70              		.section	.text.WriteDat,"ax",%progbits
  71              		.align	1
  72              		.global	WriteDat
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	WriteDat:
  79              	.LVL3:
  80              	.LFB131:
  11:Src/oleds.c   **** 		
  12:Src/oleds.c   **** void WriteDat(unsigned char I2C_Data)//写数据
  13:Src/oleds.c   ****  
  14:Src/oleds.c   ****  {
  81              		.loc 1 14 2 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		.loc 1 14 2 is_stmt 0 view .LVU6
  86 0000 00B5     		push	{lr}
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 14, -4
  90 0002 87B0     		sub	sp, sp, #28
  91              	.LCFI4:
  92              		.cfi_def_cfa_offset 32
  93 0004 8DF81700 		strb	r0, [sp, #23]
  15:Src/oleds.c   **** 
  16:Src/oleds.c   **** 		HAL_I2C_Mem_Write(&hi2c1,OLED0561_ADD,DAT,I2C_MEMADD_SIZE_8BIT,&I2C_Data,1,100);
  94              		.loc 1 16 3 is_stmt 1 view .LVU7
  95 0008 6423     		movs	r3, #100
  96 000a 0293     		str	r3, [sp, #8]
  97 000c 0123     		movs	r3, #1
  98 000e 0193     		str	r3, [sp, #4]
  99 0010 0DF11702 		add	r2, sp, #23
 100 0014 0092     		str	r2, [sp]
 101 0016 4022     		movs	r2, #64
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 3


 102 0018 7821     		movs	r1, #120
 103 001a 0348     		ldr	r0, .L7
 104              	.LVL4:
 105              		.loc 1 16 3 is_stmt 0 view .LVU8
 106 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 107              	.LVL5:
  17:Src/oleds.c   **** 	
  18:Src/oleds.c   ****   }
 108              		.loc 1 18 3 view .LVU9
 109 0020 07B0     		add	sp, sp, #28
 110              	.LCFI5:
 111              		.cfi_def_cfa_offset 4
 112              		@ sp needed
 113 0022 5DF804FB 		ldr	pc, [sp], #4
 114              	.L8:
 115 0026 00BF     		.align	2
 116              	.L7:
 117 0028 00000000 		.word	hi2c1
 118              		.cfi_endproc
 119              	.LFE131:
 121              		.section	.text.OLED_Init,"ax",%progbits
 122              		.align	1
 123              		.global	OLED_Init
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	OLED_Init:
 130              	.LFB132:
  19:Src/oleds.c   ****  
  20:Src/oleds.c   **** void OLED_Init(void)
  21:Src/oleds.c   **** {
 131              		.loc 1 21 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 08B5     		push	{r3, lr}
 136              	.LCFI6:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 3, -8
 139              		.cfi_offset 14, -4
  22:Src/oleds.c   **** 	HAL_Delay(100); //此处延时很重要
 140              		.loc 1 22 2 view .LVU11
 141 0002 6420     		movs	r0, #100
 142 0004 FFF7FEFF 		bl	HAL_Delay
 143              	.LVL6:
  23:Src/oleds.c   **** 	
  24:Src/oleds.c   **** 	WriteCmd(0xAE); //关闭显示
 144              		.loc 1 24 2 view .LVU12
 145 0008 AE20     		movs	r0, #174
 146 000a FFF7FEFF 		bl	WriteCmd
 147              	.LVL7:
  25:Src/oleds.c   **** 	WriteCmd(0x20);	//设置内存地址模式	
 148              		.loc 1 25 2 view .LVU13
 149 000e 2020     		movs	r0, #32
 150 0010 FFF7FEFF 		bl	WriteCmd
 151              	.LVL8:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 4


  26:Src/oleds.c   **** 	WriteCmd(0x10);	//00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mod
 152              		.loc 1 26 2 view .LVU14
 153 0014 1020     		movs	r0, #16
 154 0016 FFF7FEFF 		bl	WriteCmd
 155              	.LVL9:
  27:Src/oleds.c   **** 	WriteCmd(0xb0);	//Set Page Start Address for Page Addressing Mode,0-7
 156              		.loc 1 27 2 view .LVU15
 157 001a B020     		movs	r0, #176
 158 001c FFF7FEFF 		bl	WriteCmd
 159              	.LVL10:
  28:Src/oleds.c   **** 	WriteCmd(0xc8);	//Set COM Output Scan Direction
 160              		.loc 1 28 2 view .LVU16
 161 0020 C820     		movs	r0, #200
 162 0022 FFF7FEFF 		bl	WriteCmd
 163              	.LVL11:
  29:Src/oleds.c   **** 	WriteCmd(0x00); //---set low column address
 164              		.loc 1 29 2 view .LVU17
 165 0026 0020     		movs	r0, #0
 166 0028 FFF7FEFF 		bl	WriteCmd
 167              	.LVL12:
  30:Src/oleds.c   **** 	WriteCmd(0x10); //---set high column address
 168              		.loc 1 30 2 view .LVU18
 169 002c 1020     		movs	r0, #16
 170 002e FFF7FEFF 		bl	WriteCmd
 171              	.LVL13:
  31:Src/oleds.c   **** 	WriteCmd(0x40); //--set start line address
 172              		.loc 1 31 2 view .LVU19
 173 0032 4020     		movs	r0, #64
 174 0034 FFF7FEFF 		bl	WriteCmd
 175              	.LVL14:
  32:Src/oleds.c   **** 	WriteCmd(0x81); //--set contrast control register
 176              		.loc 1 32 2 view .LVU20
 177 0038 8120     		movs	r0, #129
 178 003a FFF7FEFF 		bl	WriteCmd
 179              	.LVL15:
  33:Src/oleds.c   **** 	WriteCmd(0xff); //亮度调节 0x00~0xff
 180              		.loc 1 33 2 view .LVU21
 181 003e FF20     		movs	r0, #255
 182 0040 FFF7FEFF 		bl	WriteCmd
 183              	.LVL16:
  34:Src/oleds.c   **** 	WriteCmd(0xa1); //--set segment re-map 0 to 127
 184              		.loc 1 34 2 view .LVU22
 185 0044 A120     		movs	r0, #161
 186 0046 FFF7FEFF 		bl	WriteCmd
 187              	.LVL17:
  35:Src/oleds.c   **** 	WriteCmd(0xa6); //--set normal display
 188              		.loc 1 35 2 view .LVU23
 189 004a A620     		movs	r0, #166
 190 004c FFF7FEFF 		bl	WriteCmd
 191              	.LVL18:
  36:Src/oleds.c   **** 	WriteCmd(0xa8); //--set multiplex ratio(1 to 64)
 192              		.loc 1 36 2 view .LVU24
 193 0050 A820     		movs	r0, #168
 194 0052 FFF7FEFF 		bl	WriteCmd
 195              	.LVL19:
  37:Src/oleds.c   **** 	WriteCmd(0x3F); //
 196              		.loc 1 37 2 view .LVU25
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 5


 197 0056 3F20     		movs	r0, #63
 198 0058 FFF7FEFF 		bl	WriteCmd
 199              	.LVL20:
  38:Src/oleds.c   **** 	WriteCmd(0xa4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 200              		.loc 1 38 2 view .LVU26
 201 005c A420     		movs	r0, #164
 202 005e FFF7FEFF 		bl	WriteCmd
 203              	.LVL21:
  39:Src/oleds.c   **** 	WriteCmd(0xd3); //-set display offset
 204              		.loc 1 39 2 view .LVU27
 205 0062 D320     		movs	r0, #211
 206 0064 FFF7FEFF 		bl	WriteCmd
 207              	.LVL22:
  40:Src/oleds.c   **** 	WriteCmd(0x00); //-not offset
 208              		.loc 1 40 2 view .LVU28
 209 0068 0020     		movs	r0, #0
 210 006a FFF7FEFF 		bl	WriteCmd
 211              	.LVL23:
  41:Src/oleds.c   **** 	WriteCmd(0xd5); //--set display clock divide ratio/oscillator frequency
 212              		.loc 1 41 2 view .LVU29
 213 006e D520     		movs	r0, #213
 214 0070 FFF7FEFF 		bl	WriteCmd
 215              	.LVL24:
  42:Src/oleds.c   **** 	WriteCmd(0xf0); //--set divide ratio
 216              		.loc 1 42 2 view .LVU30
 217 0074 F020     		movs	r0, #240
 218 0076 FFF7FEFF 		bl	WriteCmd
 219              	.LVL25:
  43:Src/oleds.c   **** 	WriteCmd(0xd9); //--set pre-charge period
 220              		.loc 1 43 2 view .LVU31
 221 007a D920     		movs	r0, #217
 222 007c FFF7FEFF 		bl	WriteCmd
 223              	.LVL26:
  44:Src/oleds.c   **** 	WriteCmd(0x22); //
 224              		.loc 1 44 2 view .LVU32
 225 0080 2220     		movs	r0, #34
 226 0082 FFF7FEFF 		bl	WriteCmd
 227              	.LVL27:
  45:Src/oleds.c   **** 	WriteCmd(0xda); //--set com pins hardware configuration
 228              		.loc 1 45 2 view .LVU33
 229 0086 DA20     		movs	r0, #218
 230 0088 FFF7FEFF 		bl	WriteCmd
 231              	.LVL28:
  46:Src/oleds.c   **** 	WriteCmd(0x12);
 232              		.loc 1 46 2 view .LVU34
 233 008c 1220     		movs	r0, #18
 234 008e FFF7FEFF 		bl	WriteCmd
 235              	.LVL29:
  47:Src/oleds.c   **** 	WriteCmd(0xdb); //--set vcomh
 236              		.loc 1 47 2 view .LVU35
 237 0092 DB20     		movs	r0, #219
 238 0094 FFF7FEFF 		bl	WriteCmd
 239              	.LVL30:
  48:Src/oleds.c   **** 	WriteCmd(0x20); //0x20,0.77xVcc
 240              		.loc 1 48 2 view .LVU36
 241 0098 2020     		movs	r0, #32
 242 009a FFF7FEFF 		bl	WriteCmd
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 6


 243              	.LVL31:
  49:Src/oleds.c   **** 	WriteCmd(0x8d); //--set DC-DC enable
 244              		.loc 1 49 2 view .LVU37
 245 009e 8D20     		movs	r0, #141
 246 00a0 FFF7FEFF 		bl	WriteCmd
 247              	.LVL32:
  50:Src/oleds.c   **** 	WriteCmd(0x14); //
 248              		.loc 1 50 2 view .LVU38
 249 00a4 1420     		movs	r0, #20
 250 00a6 FFF7FEFF 		bl	WriteCmd
 251              	.LVL33:
  51:Src/oleds.c   **** 	WriteCmd(0xaf); //--turn on oled panel
 252              		.loc 1 51 2 view .LVU39
 253 00aa AF20     		movs	r0, #175
 254 00ac FFF7FEFF 		bl	WriteCmd
 255              	.LVL34:
  52:Src/oleds.c   **** }
 256              		.loc 1 52 1 is_stmt 0 view .LVU40
 257 00b0 08BD     		pop	{r3, pc}
 258              		.cfi_endproc
 259              	.LFE132:
 261              		.section	.text.OLED_SetPos,"ax",%progbits
 262              		.align	1
 263              		.global	OLED_SetPos
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv4-sp-d16
 269              	OLED_SetPos:
 270              	.LVL35:
 271              	.LFB133:
  53:Src/oleds.c   **** 
  54:Src/oleds.c   **** void OLED_SetPos(unsigned char x, unsigned char y) //设置坐标
  55:Src/oleds.c   **** { 
 272              		.loc 1 55 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		.loc 1 55 1 is_stmt 0 view .LVU42
 277 0000 10B5     		push	{r4, lr}
 278              	.LCFI7:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
 282 0002 0446     		mov	r4, r0
  56:Src/oleds.c   **** 	WriteCmd(0xb0+y);
 283              		.loc 1 56 2 is_stmt 1 view .LVU43
 284 0004 A1F15000 		sub	r0, r1, #80
 285              	.LVL36:
 286              		.loc 1 56 2 is_stmt 0 view .LVU44
 287 0008 C0B2     		uxtb	r0, r0
 288 000a FFF7FEFF 		bl	WriteCmd
 289              	.LVL37:
  57:Src/oleds.c   **** 	WriteCmd(((x&0xf0)>>4)|0x10);
 290              		.loc 1 57 2 is_stmt 1 view .LVU45
 291              		.loc 1 57 20 is_stmt 0 view .LVU46
 292 000e 2009     		lsrs	r0, r4, #4
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 7


 293              		.loc 1 57 2 view .LVU47
 294 0010 40F01000 		orr	r0, r0, #16
 295 0014 FFF7FEFF 		bl	WriteCmd
 296              	.LVL38:
  58:Src/oleds.c   **** 	WriteCmd((x&0x0f)|0x01);
 297              		.loc 1 58 2 is_stmt 1 view .LVU48
 298              		.loc 1 58 19 is_stmt 0 view .LVU49
 299 0018 04F00E00 		and	r0, r4, #14
 300              		.loc 1 58 2 view .LVU50
 301 001c 40F00100 		orr	r0, r0, #1
 302 0020 FFF7FEFF 		bl	WriteCmd
 303              	.LVL39:
  59:Src/oleds.c   **** }
 304              		.loc 1 59 1 view .LVU51
 305 0024 10BD     		pop	{r4, pc}
 306              		.cfi_endproc
 307              	.LFE133:
 309              		.section	.text.OLED_Fill,"ax",%progbits
 310              		.align	1
 311              		.global	OLED_Fill
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	OLED_Fill:
 318              	.LVL40:
 319              	.LFB134:
  60:Src/oleds.c   **** 
  61:Src/oleds.c   **** void OLED_Fill(unsigned char fill_Data)//
  62:Src/oleds.c   **** {
 320              		.loc 1 62 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		.loc 1 62 1 is_stmt 0 view .LVU53
 325 0000 70B5     		push	{r4, r5, r6, lr}
 326              	.LCFI8:
 327              		.cfi_def_cfa_offset 16
 328              		.cfi_offset 4, -16
 329              		.cfi_offset 5, -12
 330              		.cfi_offset 6, -8
 331              		.cfi_offset 14, -4
 332 0002 0546     		mov	r5, r0
  63:Src/oleds.c   **** 	unsigned char m,n;
 333              		.loc 1 63 2 is_stmt 1 view .LVU54
  64:Src/oleds.c   **** 	for(m=0;m<8;m++)
 334              		.loc 1 64 2 view .LVU55
 335              	.LVL41:
 336              		.loc 1 64 7 is_stmt 0 view .LVU56
 337 0004 0026     		movs	r6, #0
 338              		.loc 1 64 2 view .LVU57
 339 0006 01E0     		b	.L14
 340              	.LVL42:
 341              	.L20:
 342              		.loc 1 64 14 is_stmt 1 discriminator 2 view .LVU58
 343              		.loc 1 64 15 is_stmt 0 discriminator 2 view .LVU59
 344 0008 0136     		adds	r6, r6, #1
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 8


 345              	.LVL43:
 346              		.loc 1 64 15 discriminator 2 view .LVU60
 347 000a F6B2     		uxtb	r6, r6
 348              	.LVL44:
 349              	.L14:
 350              		.loc 1 64 10 is_stmt 1 discriminator 1 view .LVU61
 351              		.loc 1 64 2 is_stmt 0 discriminator 1 view .LVU62
 352 000c 072E     		cmp	r6, #7
 353 000e 14D8     		bhi	.L19
  65:Src/oleds.c   **** 	{
  66:Src/oleds.c   **** 		WriteCmd(0xb0+m);		//page0-page1
 354              		.loc 1 66 3 is_stmt 1 view .LVU63
 355 0010 A6F15000 		sub	r0, r6, #80
 356 0014 C0B2     		uxtb	r0, r0
 357 0016 FFF7FEFF 		bl	WriteCmd
 358              	.LVL45:
  67:Src/oleds.c   **** 		WriteCmd(0x00);		//low column start address
 359              		.loc 1 67 3 view .LVU64
 360 001a 0020     		movs	r0, #0
 361 001c FFF7FEFF 		bl	WriteCmd
 362              	.LVL46:
  68:Src/oleds.c   **** 		WriteCmd(0x10);		//high column start address
 363              		.loc 1 68 3 view .LVU65
 364 0020 1020     		movs	r0, #16
 365 0022 FFF7FEFF 		bl	WriteCmd
 366              	.LVL47:
  69:Src/oleds.c   **** 		for(n=0;n<128;n++)
 367              		.loc 1 69 3 view .LVU66
 368              		.loc 1 69 8 is_stmt 0 view .LVU67
 369 0026 0024     		movs	r4, #0
 370              	.LVL48:
 371              	.L15:
 372              		.loc 1 69 11 is_stmt 1 discriminator 1 view .LVU68
 373              		.loc 1 69 3 is_stmt 0 discriminator 1 view .LVU69
 374 0028 14F0800F 		tst	r4, #128
 375 002c ECD1     		bne	.L20
  70:Src/oleds.c   **** 			{
  71:Src/oleds.c   **** 				WriteDat(fill_Data);
 376              		.loc 1 71 5 is_stmt 1 discriminator 3 view .LVU70
 377 002e 2846     		mov	r0, r5
 378 0030 FFF7FEFF 		bl	WriteDat
 379              	.LVL49:
  69:Src/oleds.c   **** 		for(n=0;n<128;n++)
 380              		.loc 1 69 17 discriminator 3 view .LVU71
  69:Src/oleds.c   **** 		for(n=0;n<128;n++)
 381              		.loc 1 69 18 is_stmt 0 discriminator 3 view .LVU72
 382 0034 0134     		adds	r4, r4, #1
 383              	.LVL50:
  69:Src/oleds.c   **** 		for(n=0;n<128;n++)
 384              		.loc 1 69 18 discriminator 3 view .LVU73
 385 0036 E4B2     		uxtb	r4, r4
 386              	.LVL51:
  69:Src/oleds.c   **** 		for(n=0;n<128;n++)
 387              		.loc 1 69 18 discriminator 3 view .LVU74
 388 0038 F6E7     		b	.L15
 389              	.LVL52:
 390              	.L19:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 9


  72:Src/oleds.c   **** 			}
  73:Src/oleds.c   **** 	}
  74:Src/oleds.c   **** }
 391              		.loc 1 74 1 view .LVU75
 392 003a 70BD     		pop	{r4, r5, r6, pc}
 393              		.loc 1 74 1 view .LVU76
 394              		.cfi_endproc
 395              	.LFE134:
 397              		.section	.text.OLED_CLS,"ax",%progbits
 398              		.align	1
 399              		.global	OLED_CLS
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	OLED_CLS:
 406              	.LFB135:
  75:Src/oleds.c   **** 
  76:Src/oleds.c   **** 
  77:Src/oleds.c   **** void OLED_CLS(void)	//清屏
  78:Src/oleds.c   **** {
 407              		.loc 1 78 1 is_stmt 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411 0000 08B5     		push	{r3, lr}
 412              	.LCFI9:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 3, -8
 415              		.cfi_offset 14, -4
  79:Src/oleds.c   **** 	OLED_Fill(0x00);
 416              		.loc 1 79 2 view .LVU78
 417 0002 0020     		movs	r0, #0
 418 0004 FFF7FEFF 		bl	OLED_Fill
 419              	.LVL53:
  80:Src/oleds.c   **** }
 420              		.loc 1 80 1 is_stmt 0 view .LVU79
 421 0008 08BD     		pop	{r3, pc}
 422              		.cfi_endproc
 423              	.LFE135:
 425              		.section	.text.OLED_ON,"ax",%progbits
 426              		.align	1
 427              		.global	OLED_ON
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	OLED_ON:
 434              	.LFB136:
  81:Src/oleds.c   **** 
  82:Src/oleds.c   **** void OLED_ON(void)
  83:Src/oleds.c   **** {
 435              		.loc 1 83 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 08B5     		push	{r3, lr}
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 10


 440              	.LCFI10:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 3, -8
 443              		.cfi_offset 14, -4
  84:Src/oleds.c   **** 	WriteCmd(0X8D);  //设置电荷泵
 444              		.loc 1 84 2 view .LVU81
 445 0002 8D20     		movs	r0, #141
 446 0004 FFF7FEFF 		bl	WriteCmd
 447              	.LVL54:
  85:Src/oleds.c   **** 	WriteCmd(0X14);  //开启电荷泵
 448              		.loc 1 85 2 view .LVU82
 449 0008 1420     		movs	r0, #20
 450 000a FFF7FEFF 		bl	WriteCmd
 451              	.LVL55:
  86:Src/oleds.c   **** 	WriteCmd(0XAF);  //OLED唤醒
 452              		.loc 1 86 2 view .LVU83
 453 000e AF20     		movs	r0, #175
 454 0010 FFF7FEFF 		bl	WriteCmd
 455              	.LVL56:
  87:Src/oleds.c   **** }
 456              		.loc 1 87 1 is_stmt 0 view .LVU84
 457 0014 08BD     		pop	{r3, pc}
 458              		.cfi_endproc
 459              	.LFE136:
 461              		.section	.text.OLED_OFF,"ax",%progbits
 462              		.align	1
 463              		.global	OLED_OFF
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu fpv4-sp-d16
 469              	OLED_OFF:
 470              	.LFB137:
  88:Src/oleds.c   **** 
  89:Src/oleds.c   **** void OLED_OFF(void)
  90:Src/oleds.c   **** {
 471              		.loc 1 90 1 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475 0000 08B5     		push	{r3, lr}
 476              	.LCFI11:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 3, -8
 479              		.cfi_offset 14, -4
  91:Src/oleds.c   **** 	WriteCmd(0X8D);  //设置电荷泵
 480              		.loc 1 91 2 view .LVU86
 481 0002 8D20     		movs	r0, #141
 482 0004 FFF7FEFF 		bl	WriteCmd
 483              	.LVL57:
  92:Src/oleds.c   **** 	WriteCmd(0X10);  //关闭电荷泵
 484              		.loc 1 92 2 view .LVU87
 485 0008 1020     		movs	r0, #16
 486 000a FFF7FEFF 		bl	WriteCmd
 487              	.LVL58:
  93:Src/oleds.c   **** 	WriteCmd(0XAE);  //OLED休眠
 488              		.loc 1 93 2 view .LVU88
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 11


 489 000e AE20     		movs	r0, #174
 490 0010 FFF7FEFF 		bl	WriteCmd
 491              	.LVL59:
  94:Src/oleds.c   **** }
 492              		.loc 1 94 1 is_stmt 0 view .LVU89
 493 0014 08BD     		pop	{r3, pc}
 494              		.cfi_endproc
 495              	.LFE137:
 497              		.section	.text.OLED_ShowStr,"ax",%progbits
 498              		.align	1
 499              		.global	OLED_ShowStr
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv4-sp-d16
 505              	OLED_ShowStr:
 506              	.LVL60:
 507              	.LFB138:
  95:Src/oleds.c   **** 
  96:Src/oleds.c   **** 
  97:Src/oleds.c   **** // Parameters     : x,y -- 起始坐标(x:0~127, y:0~7); ch[] -- 要显示的字符串; TextSize --
  98:Src/oleds.c   **** // Description    : 显示codetab.h中的ASCII字符,有6*8和8*16可选
  99:Src/oleds.c   **** void OLED_ShowStr(unsigned char x, unsigned char y, unsigned char ch[], unsigned char TextSize)
 100:Src/oleds.c   **** {
 508              		.loc 1 100 1 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		.loc 1 100 1 is_stmt 0 view .LVU91
 513 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 514              	.LCFI12:
 515              		.cfi_def_cfa_offset 32
 516              		.cfi_offset 3, -32
 517              		.cfi_offset 4, -28
 518              		.cfi_offset 5, -24
 519              		.cfi_offset 6, -20
 520              		.cfi_offset 7, -16
 521              		.cfi_offset 8, -12
 522              		.cfi_offset 9, -8
 523              		.cfi_offset 14, -4
 524 0004 0646     		mov	r6, r0
 525 0006 0F46     		mov	r7, r1
 526 0008 9046     		mov	r8, r2
 101:Src/oleds.c   **** 	unsigned char c = 0,i = 0,j = 0;
 527              		.loc 1 101 2 is_stmt 1 view .LVU92
 528              	.LVL61:
 102:Src/oleds.c   **** 	switch(TextSize)
 529              		.loc 1 102 2 view .LVU93
 530 000a 012B     		cmp	r3, #1
 531 000c 26D0     		beq	.L41
 532 000e 022B     		cmp	r3, #2
 533 0010 5AD0     		beq	.L42
 534              	.LVL62:
 535              	.L27:
 103:Src/oleds.c   **** 	{
 104:Src/oleds.c   **** 		case 1:
 105:Src/oleds.c   **** 		{
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 12


 106:Src/oleds.c   **** 			while(ch[j] != '\0')
 107:Src/oleds.c   **** 			{
 108:Src/oleds.c   **** 				c = ch[j] - 32;
 109:Src/oleds.c   **** 				if(x > 126)
 110:Src/oleds.c   **** 				{
 111:Src/oleds.c   **** 					x = 0;
 112:Src/oleds.c   **** 					y++;
 113:Src/oleds.c   **** 				}
 114:Src/oleds.c   **** 				OLED_SetPos(x,y);
 115:Src/oleds.c   **** 				for(i=0;i<6;i++)
 116:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 117:Src/oleds.c   **** 				x += 6;
 118:Src/oleds.c   **** 				j++;
 119:Src/oleds.c   **** 			}
 120:Src/oleds.c   **** 		}break;
 121:Src/oleds.c   **** 		case 2:
 122:Src/oleds.c   **** 		{
 123:Src/oleds.c   **** 			while(ch[j] != '\0')
 124:Src/oleds.c   **** 			{
 125:Src/oleds.c   **** 				c = ch[j] - 32;
 126:Src/oleds.c   **** 				if(x > 120)
 127:Src/oleds.c   **** 				{
 128:Src/oleds.c   **** 					x = 0;
 129:Src/oleds.c   **** 					y++;
 130:Src/oleds.c   **** 				}
 131:Src/oleds.c   **** 				OLED_SetPos(x,y);
 132:Src/oleds.c   **** 				for(i=0;i<8;i++)
 133:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 134:Src/oleds.c   **** 				OLED_SetPos(x,y+1);
 135:Src/oleds.c   **** 				for(i=0;i<8;i++)
 136:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 137:Src/oleds.c   **** 				x += 8;
 138:Src/oleds.c   **** 				j++;
 139:Src/oleds.c   **** 			}
 140:Src/oleds.c   **** 		}break;
 141:Src/oleds.c   **** 	}
 142:Src/oleds.c   **** }
 536              		.loc 1 142 1 is_stmt 0 view .LVU94
 537 0012 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 538              	.LVL63:
 539              	.L44:
 117:Src/oleds.c   **** 				j++;
 540              		.loc 1 117 5 is_stmt 1 view .LVU95
 117:Src/oleds.c   **** 				j++;
 541              		.loc 1 117 7 is_stmt 0 view .LVU96
 542 0016 0636     		adds	r6, r6, #6
 543              	.LVL64:
 117:Src/oleds.c   **** 				j++;
 544              		.loc 1 117 7 view .LVU97
 545 0018 F6B2     		uxtb	r6, r6
 546              	.LVL65:
 118:Src/oleds.c   **** 			}
 547              		.loc 1 118 5 is_stmt 1 view .LVU98
 118:Src/oleds.c   **** 			}
 548              		.loc 1 118 6 is_stmt 0 view .LVU99
 549 001a 09F10109 		add	r9, r9, #1
 550              	.LVL66:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 13


 118:Src/oleds.c   **** 			}
 551              		.loc 1 118 6 view .LVU100
 552 001e 5FFA89F9 		uxtb	r9, r9
 553              	.LVL67:
 554              	.L28:
 106:Src/oleds.c   **** 			{
 555              		.loc 1 106 9 is_stmt 1 view .LVU101
 106:Src/oleds.c   **** 			{
 556              		.loc 1 106 12 is_stmt 0 view .LVU102
 557 0022 18F80950 		ldrb	r5, [r8, r9]	@ zero_extendqisi2
 106:Src/oleds.c   **** 			{
 558              		.loc 1 106 9 view .LVU103
 559 0026 002D     		cmp	r5, #0
 560 0028 F3D0     		beq	.L27
 108:Src/oleds.c   **** 				if(x > 126)
 561              		.loc 1 108 5 is_stmt 1 view .LVU104
 108:Src/oleds.c   **** 				if(x > 126)
 562              		.loc 1 108 7 is_stmt 0 view .LVU105
 563 002a 203D     		subs	r5, r5, #32
 564 002c EDB2     		uxtb	r5, r5
 565              	.LVL68:
 109:Src/oleds.c   **** 				{
 566              		.loc 1 109 5 is_stmt 1 view .LVU106
 109:Src/oleds.c   **** 				{
 567              		.loc 1 109 7 is_stmt 0 view .LVU107
 568 002e 7E2E     		cmp	r6, #126
 569 0030 02D9     		bls	.L31
 111:Src/oleds.c   **** 					y++;
 570              		.loc 1 111 6 is_stmt 1 view .LVU108
 571              	.LVL69:
 112:Src/oleds.c   **** 				}
 572              		.loc 1 112 6 view .LVU109
 112:Src/oleds.c   **** 				}
 573              		.loc 1 112 7 is_stmt 0 view .LVU110
 574 0032 0137     		adds	r7, r7, #1
 575              	.LVL70:
 112:Src/oleds.c   **** 				}
 576              		.loc 1 112 7 view .LVU111
 577 0034 FFB2     		uxtb	r7, r7
 578              	.LVL71:
 111:Src/oleds.c   **** 					y++;
 579              		.loc 1 111 8 view .LVU112
 580 0036 0026     		movs	r6, #0
 581              	.LVL72:
 582              	.L31:
 114:Src/oleds.c   **** 				for(i=0;i<6;i++)
 583              		.loc 1 114 5 is_stmt 1 view .LVU113
 584 0038 3946     		mov	r1, r7
 585 003a 3046     		mov	r0, r6
 586 003c FFF7FEFF 		bl	OLED_SetPos
 587              	.LVL73:
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 588              		.loc 1 115 5 view .LVU114
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 589              		.loc 1 115 10 is_stmt 0 view .LVU115
 590 0040 0024     		movs	r4, #0
 591              	.LVL74:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 14


 592              	.L32:
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 593              		.loc 1 115 13 is_stmt 1 discriminator 1 view .LVU116
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 594              		.loc 1 115 5 is_stmt 0 discriminator 1 view .LVU117
 595 0042 052C     		cmp	r4, #5
 596 0044 E7D8     		bhi	.L44
 116:Src/oleds.c   **** 				x += 6;
 597              		.loc 1 116 6 is_stmt 1 discriminator 3 view .LVU118
 598 0046 05EB4503 		add	r3, r5, r5, lsl #1
 599 004a 214A     		ldr	r2, .L45
 600 004c 02EB4303 		add	r3, r2, r3, lsl #1
 601 0050 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 602 0052 FFF7FEFF 		bl	WriteDat
 603              	.LVL75:
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 604              		.loc 1 115 17 discriminator 3 view .LVU119
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 605              		.loc 1 115 18 is_stmt 0 discriminator 3 view .LVU120
 606 0056 0134     		adds	r4, r4, #1
 607              	.LVL76:
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 608              		.loc 1 115 18 discriminator 3 view .LVU121
 609 0058 E4B2     		uxtb	r4, r4
 610              	.LVL77:
 115:Src/oleds.c   **** 					WriteDat(F6x8[c][i]);
 611              		.loc 1 115 18 discriminator 3 view .LVU122
 612 005a F2E7     		b	.L32
 613              	.LVL78:
 614              	.L41:
 102:Src/oleds.c   **** 	{
 615              		.loc 1 102 2 view .LVU123
 616 005c 4FF00009 		mov	r9, #0
 617 0060 DFE7     		b	.L28
 618              	.LVL79:
 619              	.L37:
 133:Src/oleds.c   **** 				OLED_SetPos(x,y+1);
 620              		.loc 1 133 6 is_stmt 1 discriminator 3 view .LVU124
 133:Src/oleds.c   **** 				OLED_SetPos(x,y+1);
 621              		.loc 1 133 25 is_stmt 0 discriminator 3 view .LVU125
 622 0062 04EB0513 		add	r3, r4, r5, lsl #4
 133:Src/oleds.c   **** 				OLED_SetPos(x,y+1);
 623              		.loc 1 133 6 discriminator 3 view .LVU126
 624 0066 1B4A     		ldr	r2, .L45+4
 625 0068 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 626 006a FFF7FEFF 		bl	WriteDat
 627              	.LVL80:
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 628              		.loc 1 132 17 is_stmt 1 discriminator 3 view .LVU127
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 629              		.loc 1 132 18 is_stmt 0 discriminator 3 view .LVU128
 630 006e 0134     		adds	r4, r4, #1
 631              	.LVL81:
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 632              		.loc 1 132 18 discriminator 3 view .LVU129
 633 0070 E4B2     		uxtb	r4, r4
 634              	.LVL82:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 15


 635              	.L36:
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 636              		.loc 1 132 13 is_stmt 1 discriminator 1 view .LVU130
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 637              		.loc 1 132 5 is_stmt 0 discriminator 1 view .LVU131
 638 0072 072C     		cmp	r4, #7
 639 0074 F5D9     		bls	.L37
 134:Src/oleds.c   **** 				for(i=0;i<8;i++)
 640              		.loc 1 134 5 is_stmt 1 view .LVU132
 641 0076 791C     		adds	r1, r7, #1
 642 0078 C9B2     		uxtb	r1, r1
 643 007a 3046     		mov	r0, r6
 644 007c FFF7FEFF 		bl	OLED_SetPos
 645              	.LVL83:
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 646              		.loc 1 135 5 view .LVU133
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 647              		.loc 1 135 10 is_stmt 0 view .LVU134
 648 0080 0024     		movs	r4, #0
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 649              		.loc 1 135 5 view .LVU135
 650 0082 08E0     		b	.L38
 651              	.LVL84:
 652              	.L39:
 136:Src/oleds.c   **** 				x += 8;
 653              		.loc 1 136 6 is_stmt 1 discriminator 3 view .LVU136
 136:Src/oleds.c   **** 				x += 8;
 654              		.loc 1 136 25 is_stmt 0 discriminator 3 view .LVU137
 655 0084 04EB0513 		add	r3, r4, r5, lsl #4
 136:Src/oleds.c   **** 				x += 8;
 656              		.loc 1 136 27 discriminator 3 view .LVU138
 657 0088 0833     		adds	r3, r3, #8
 136:Src/oleds.c   **** 				x += 8;
 658              		.loc 1 136 6 discriminator 3 view .LVU139
 659 008a 124A     		ldr	r2, .L45+4
 660 008c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 661 008e FFF7FEFF 		bl	WriteDat
 662              	.LVL85:
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 663              		.loc 1 135 17 is_stmt 1 discriminator 3 view .LVU140
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 664              		.loc 1 135 18 is_stmt 0 discriminator 3 view .LVU141
 665 0092 0134     		adds	r4, r4, #1
 666              	.LVL86:
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 667              		.loc 1 135 18 discriminator 3 view .LVU142
 668 0094 E4B2     		uxtb	r4, r4
 669              	.LVL87:
 670              	.L38:
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 671              		.loc 1 135 13 is_stmt 1 discriminator 1 view .LVU143
 135:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i+8]);
 672              		.loc 1 135 5 is_stmt 0 discriminator 1 view .LVU144
 673 0096 072C     		cmp	r4, #7
 674 0098 F4D9     		bls	.L39
 137:Src/oleds.c   **** 				j++;
 675              		.loc 1 137 5 is_stmt 1 view .LVU145
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 16


 137:Src/oleds.c   **** 				j++;
 676              		.loc 1 137 7 is_stmt 0 view .LVU146
 677 009a 0836     		adds	r6, r6, #8
 678              	.LVL88:
 137:Src/oleds.c   **** 				j++;
 679              		.loc 1 137 7 view .LVU147
 680 009c F6B2     		uxtb	r6, r6
 681              	.LVL89:
 138:Src/oleds.c   **** 			}
 682              		.loc 1 138 5 is_stmt 1 view .LVU148
 138:Src/oleds.c   **** 			}
 683              		.loc 1 138 6 is_stmt 0 view .LVU149
 684 009e 09F10109 		add	r9, r9, #1
 685              	.LVL90:
 138:Src/oleds.c   **** 			}
 686              		.loc 1 138 6 view .LVU150
 687 00a2 5FFA89F9 		uxtb	r9, r9
 688              	.LVL91:
 689              	.L29:
 123:Src/oleds.c   **** 			{
 690              		.loc 1 123 9 is_stmt 1 view .LVU151
 123:Src/oleds.c   **** 			{
 691              		.loc 1 123 12 is_stmt 0 view .LVU152
 692 00a6 18F80950 		ldrb	r5, [r8, r9]	@ zero_extendqisi2
 123:Src/oleds.c   **** 			{
 693              		.loc 1 123 9 view .LVU153
 694 00aa 002D     		cmp	r5, #0
 695 00ac B1D0     		beq	.L27
 125:Src/oleds.c   **** 				if(x > 120)
 696              		.loc 1 125 5 is_stmt 1 view .LVU154
 125:Src/oleds.c   **** 				if(x > 120)
 697              		.loc 1 125 7 is_stmt 0 view .LVU155
 698 00ae 203D     		subs	r5, r5, #32
 699 00b0 EDB2     		uxtb	r5, r5
 700              	.LVL92:
 126:Src/oleds.c   **** 				{
 701              		.loc 1 126 5 is_stmt 1 view .LVU156
 126:Src/oleds.c   **** 				{
 702              		.loc 1 126 7 is_stmt 0 view .LVU157
 703 00b2 782E     		cmp	r6, #120
 704 00b4 02D9     		bls	.L35
 128:Src/oleds.c   **** 					y++;
 705              		.loc 1 128 6 is_stmt 1 view .LVU158
 706              	.LVL93:
 129:Src/oleds.c   **** 				}
 707              		.loc 1 129 6 view .LVU159
 129:Src/oleds.c   **** 				}
 708              		.loc 1 129 7 is_stmt 0 view .LVU160
 709 00b6 0137     		adds	r7, r7, #1
 710              	.LVL94:
 129:Src/oleds.c   **** 				}
 711              		.loc 1 129 7 view .LVU161
 712 00b8 FFB2     		uxtb	r7, r7
 713              	.LVL95:
 128:Src/oleds.c   **** 					y++;
 714              		.loc 1 128 8 view .LVU162
 715 00ba 0026     		movs	r6, #0
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 17


 716              	.LVL96:
 717              	.L35:
 131:Src/oleds.c   **** 				for(i=0;i<8;i++)
 718              		.loc 1 131 5 is_stmt 1 view .LVU163
 719 00bc 3946     		mov	r1, r7
 720 00be 3046     		mov	r0, r6
 721 00c0 FFF7FEFF 		bl	OLED_SetPos
 722              	.LVL97:
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 723              		.loc 1 132 5 view .LVU164
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 724              		.loc 1 132 10 is_stmt 0 view .LVU165
 725 00c4 0024     		movs	r4, #0
 132:Src/oleds.c   **** 					WriteDat(F8X16[c*16+i]);
 726              		.loc 1 132 5 view .LVU166
 727 00c6 D4E7     		b	.L36
 728              	.LVL98:
 729              	.L42:
 102:Src/oleds.c   **** 	{
 730              		.loc 1 102 2 view .LVU167
 731 00c8 4FF00009 		mov	r9, #0
 732 00cc EBE7     		b	.L29
 733              	.L46:
 734 00ce 00BF     		.align	2
 735              	.L45:
 736 00d0 00000000 		.word	.LANCHOR0
 737 00d4 00000000 		.word	.LANCHOR1
 738              		.cfi_endproc
 739              	.LFE138:
 741              		.section	.text.OLED_ShowCN,"ax",%progbits
 742              		.align	1
 743              		.global	OLED_ShowCN
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	OLED_ShowCN:
 750              	.LVL99:
 751              	.LFB139:
 143:Src/oleds.c   **** 
 144:Src/oleds.c   **** 
 145:Src/oleds.c   **** // Parameters     : x,y -- 起始点坐标(x:0~127, y:0~7); N:汉字在codetab.h中的索引
 146:Src/oleds.c   **** // Description    : 显示codetab.h中的汉字,16*16点阵
 147:Src/oleds.c   **** void OLED_ShowCN(unsigned char x, unsigned char y, unsigned char N)
 148:Src/oleds.c   **** {
 752              		.loc 1 148 1 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		.loc 1 148 1 is_stmt 0 view .LVU169
 757 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 758              	.LCFI13:
 759              		.cfi_def_cfa_offset 24
 760              		.cfi_offset 3, -24
 761              		.cfi_offset 4, -20
 762              		.cfi_offset 5, -16
 763              		.cfi_offset 6, -12
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 18


 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 0746     		mov	r7, r0
 767 0004 0E46     		mov	r6, r1
 149:Src/oleds.c   **** 	unsigned char wm=0;
 768              		.loc 1 149 2 is_stmt 1 view .LVU170
 769              	.LVL100:
 150:Src/oleds.c   **** 	unsigned int  adder=32*N;
 770              		.loc 1 150 2 view .LVU171
 771              		.loc 1 150 24 is_stmt 0 view .LVU172
 772 0006 5401     		lsls	r4, r2, #5
 773              	.LVL101:
 151:Src/oleds.c   **** 	OLED_SetPos(x , y);
 774              		.loc 1 151 2 is_stmt 1 view .LVU173
 775 0008 FFF7FEFF 		bl	OLED_SetPos
 776              	.LVL102:
 152:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 777              		.loc 1 152 2 view .LVU174
 778              		.loc 1 152 9 is_stmt 0 view .LVU175
 779 000c 0025     		movs	r5, #0
 780              	.LVL103:
 781              	.L48:
 782              		.loc 1 152 13 is_stmt 1 discriminator 1 view .LVU176
 783              		.loc 1 152 2 is_stmt 0 discriminator 1 view .LVU177
 784 000e 0F2D     		cmp	r5, #15
 785 0010 07D8     		bhi	.L53
 153:Src/oleds.c   **** 	{
 154:Src/oleds.c   **** 		WriteDat(F16x16[adder]);
 786              		.loc 1 154 3 is_stmt 1 discriminator 3 view .LVU178
 787 0012 0C4B     		ldr	r3, .L55
 788 0014 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 789 0016 FFF7FEFF 		bl	WriteDat
 790              	.LVL104:
 155:Src/oleds.c   **** 		adder += 1;
 791              		.loc 1 155 3 discriminator 3 view .LVU179
 792              		.loc 1 155 9 is_stmt 0 discriminator 3 view .LVU180
 793 001a 0134     		adds	r4, r4, #1
 794              	.LVL105:
 152:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 795              		.loc 1 152 21 is_stmt 1 discriminator 3 view .LVU181
 152:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 796              		.loc 1 152 23 is_stmt 0 discriminator 3 view .LVU182
 797 001c 0135     		adds	r5, r5, #1
 798              	.LVL106:
 152:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 799              		.loc 1 152 23 discriminator 3 view .LVU183
 800 001e EDB2     		uxtb	r5, r5
 801              	.LVL107:
 152:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 802              		.loc 1 152 23 discriminator 3 view .LVU184
 803 0020 F5E7     		b	.L48
 804              	.L53:
 156:Src/oleds.c   **** 	}
 157:Src/oleds.c   **** 	OLED_SetPos(x,y + 1);
 805              		.loc 1 157 2 is_stmt 1 view .LVU185
 806 0022 711C     		adds	r1, r6, #1
 807 0024 C9B2     		uxtb	r1, r1
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 19


 808 0026 3846     		mov	r0, r7
 809 0028 FFF7FEFF 		bl	OLED_SetPos
 810              	.LVL108:
 158:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 811              		.loc 1 158 2 view .LVU186
 812              		.loc 1 158 9 is_stmt 0 view .LVU187
 813 002c 0025     		movs	r5, #0
 814              	.LVL109:
 815              	.L50:
 816              		.loc 1 158 13 is_stmt 1 discriminator 1 view .LVU188
 817              		.loc 1 158 2 is_stmt 0 discriminator 1 view .LVU189
 818 002e 0F2D     		cmp	r5, #15
 819 0030 07D8     		bhi	.L54
 159:Src/oleds.c   **** 	{
 160:Src/oleds.c   **** 		WriteDat(F16x16[adder]);
 820              		.loc 1 160 3 is_stmt 1 discriminator 3 view .LVU190
 821 0032 044B     		ldr	r3, .L55
 822 0034 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 823 0036 FFF7FEFF 		bl	WriteDat
 824              	.LVL110:
 161:Src/oleds.c   **** 		adder += 1;
 825              		.loc 1 161 3 discriminator 3 view .LVU191
 826              		.loc 1 161 9 is_stmt 0 discriminator 3 view .LVU192
 827 003a 0134     		adds	r4, r4, #1
 828              	.LVL111:
 158:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 829              		.loc 1 158 21 is_stmt 1 discriminator 3 view .LVU193
 158:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 830              		.loc 1 158 23 is_stmt 0 discriminator 3 view .LVU194
 831 003c 0135     		adds	r5, r5, #1
 832              	.LVL112:
 158:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 833              		.loc 1 158 23 discriminator 3 view .LVU195
 834 003e EDB2     		uxtb	r5, r5
 835              	.LVL113:
 158:Src/oleds.c   **** 	for(wm = 0;wm < 16;wm++)
 836              		.loc 1 158 23 discriminator 3 view .LVU196
 837 0040 F5E7     		b	.L50
 838              	.L54:
 162:Src/oleds.c   **** 	}
 163:Src/oleds.c   **** }
 839              		.loc 1 163 1 view .LVU197
 840 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 841              	.LVL114:
 842              	.L56:
 843              		.loc 1 163 1 view .LVU198
 844              		.align	2
 845              	.L55:
 846 0044 00000000 		.word	.LANCHOR2
 847              		.cfi_endproc
 848              	.LFE139:
 850              		.section	.text.OLED_DrawBMP,"ax",%progbits
 851              		.align	1
 852              		.global	OLED_DrawBMP
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 20


 856              		.fpu fpv4-sp-d16
 858              	OLED_DrawBMP:
 859              	.LVL115:
 860              	.LFB140:
 164:Src/oleds.c   **** 
 165:Src/oleds.c   **** 
 166:Src/oleds.c   **** 
 167:Src/oleds.c   **** // Parameters     : x0,y0 -- 起始点坐标(x0:0~127, y0:0~7); x1,y1 -- 起点对角线(结束点)
 168:Src/oleds.c   **** // Description    : 显示BMP位图
 169:Src/oleds.c   **** void OLED_DrawBMP(unsigned char x0,unsigned char y0,unsigned char x1,unsigned char y1,unsigned char
 170:Src/oleds.c   **** {
 861              		.loc 1 170 1 is_stmt 1 view -0
 862              		.cfi_startproc
 863              		@ args = 4, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              		.loc 1 170 1 is_stmt 0 view .LVU200
 866 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 867              	.LCFI14:
 868              		.cfi_def_cfa_offset 40
 869              		.cfi_offset 3, -40
 870              		.cfi_offset 4, -36
 871              		.cfi_offset 5, -32
 872              		.cfi_offset 6, -28
 873              		.cfi_offset 7, -24
 874              		.cfi_offset 8, -20
 875              		.cfi_offset 9, -16
 876              		.cfi_offset 10, -12
 877              		.cfi_offset 11, -8
 878              		.cfi_offset 14, -4
 879 0004 8146     		mov	r9, r0
 880 0006 8846     		mov	r8, r1
 881 0008 1646     		mov	r6, r2
 882 000a 9A46     		mov	r10, r3
 883 000c 0A9F     		ldr	r7, [sp, #40]
 171:Src/oleds.c   **** 	unsigned int j=0;
 884              		.loc 1 171 2 is_stmt 1 view .LVU201
 885              	.LVL116:
 172:Src/oleds.c   **** 	unsigned char x,y;
 886              		.loc 1 172 2 view .LVU202
 173:Src/oleds.c   **** 
 174:Src/oleds.c   ****   if(y1%8==0)
 887              		.loc 1 174 3 view .LVU203
 175:Src/oleds.c   **** 		y = y1/8;
 176:Src/oleds.c   ****   else
 177:Src/oleds.c   **** 		y = y1/8 + 1;
 178:Src/oleds.c   **** 	for(y=y0;y<y1;y++)
 179:Src/oleds.c   **** 	{
 180:Src/oleds.c   **** 		OLED_SetPos(x0,y);
 181:Src/oleds.c   ****     for(x=x0;x<x1;x++)
 182:Src/oleds.c   **** 		{
 183:Src/oleds.c   **** 			WriteDat(BMP[j++]);
 888              		.loc 1 183 18 is_stmt 0 view .LVU204
 889 000e 4FF0000B 		mov	fp, #0
 890 0012 0EE0     		b	.L58
 891              	.LVL117:
 892              	.L60:
 893              		.loc 1 183 4 is_stmt 1 discriminator 3 view .LVU205
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 21


 894              		.loc 1 183 18 is_stmt 0 discriminator 3 view .LVU206
 895 0014 0BF10105 		add	r5, fp, #1
 896              	.LVL118:
 897              		.loc 1 183 4 discriminator 3 view .LVU207
 898 0018 17F80B00 		ldrb	r0, [r7, fp]	@ zero_extendqisi2
 899 001c FFF7FEFF 		bl	WriteDat
 900              	.LVL119:
 181:Src/oleds.c   **** 		{
 901              		.loc 1 181 19 is_stmt 1 discriminator 3 view .LVU208
 181:Src/oleds.c   **** 		{
 902              		.loc 1 181 20 is_stmt 0 discriminator 3 view .LVU209
 903 0020 0134     		adds	r4, r4, #1
 904              	.LVL120:
 181:Src/oleds.c   **** 		{
 905              		.loc 1 181 20 discriminator 3 view .LVU210
 906 0022 E4B2     		uxtb	r4, r4
 907              	.LVL121:
 908              		.loc 1 183 18 discriminator 3 view .LVU211
 909 0024 AB46     		mov	fp, r5
 910              	.LVL122:
 911              	.L59:
 181:Src/oleds.c   **** 		{
 912              		.loc 1 181 14 is_stmt 1 discriminator 1 view .LVU212
 181:Src/oleds.c   **** 		{
 913              		.loc 1 181 5 is_stmt 0 discriminator 1 view .LVU213
 914 0026 B442     		cmp	r4, r6
 915 0028 F4D3     		bcc	.L60
 178:Src/oleds.c   **** 	{
 916              		.loc 1 178 16 is_stmt 1 discriminator 2 view .LVU214
 178:Src/oleds.c   **** 	{
 917              		.loc 1 178 17 is_stmt 0 discriminator 2 view .LVU215
 918 002a 08F10108 		add	r8, r8, #1
 919              	.LVL123:
 178:Src/oleds.c   **** 	{
 920              		.loc 1 178 17 discriminator 2 view .LVU216
 921 002e 5FFA88F8 		uxtb	r8, r8
 922              	.LVL124:
 923              	.L58:
 178:Src/oleds.c   **** 	{
 924              		.loc 1 178 11 is_stmt 1 discriminator 1 view .LVU217
 178:Src/oleds.c   **** 	{
 925              		.loc 1 178 2 is_stmt 0 discriminator 1 view .LVU218
 926 0032 D045     		cmp	r8, r10
 927 0034 05D2     		bcs	.L63
 180:Src/oleds.c   ****     for(x=x0;x<x1;x++)
 928              		.loc 1 180 3 is_stmt 1 view .LVU219
 929 0036 4146     		mov	r1, r8
 930 0038 4846     		mov	r0, r9
 931 003a FFF7FEFF 		bl	OLED_SetPos
 932              	.LVL125:
 181:Src/oleds.c   **** 		{
 933              		.loc 1 181 5 view .LVU220
 181:Src/oleds.c   **** 		{
 934              		.loc 1 181 10 is_stmt 0 view .LVU221
 935 003e 4C46     		mov	r4, r9
 181:Src/oleds.c   **** 		{
 936              		.loc 1 181 5 view .LVU222
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 22


 937 0040 F1E7     		b	.L59
 938              	.LVL126:
 939              	.L63:
 184:Src/oleds.c   **** 		}
 185:Src/oleds.c   **** 	}
 186:Src/oleds.c   **** }
 940              		.loc 1 186 1 view .LVU223
 941 0042 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 942              		.loc 1 186 1 view .LVU224
 943              		.cfi_endproc
 944              	.LFE140:
 946              		.section	.text.OLED_ShowChar,"ax",%progbits
 947              		.align	1
 948              		.global	OLED_ShowChar
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu fpv4-sp-d16
 954              	OLED_ShowChar:
 955              	.LVL127:
 956              	.LFB141:
 187:Src/oleds.c   **** 
 188:Src/oleds.c   **** 
 189:Src/oleds.c   **** 
 190:Src/oleds.c   **** 
 191:Src/oleds.c   **** 
 192:Src/oleds.c   **** 
 193:Src/oleds.c   **** void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 194:Src/oleds.c   **** {      	
 957              		.loc 1 194 1 is_stmt 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              		.loc 1 194 1 is_stmt 0 view .LVU226
 962 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 963              	.LCFI15:
 964              		.cfi_def_cfa_offset 24
 965              		.cfi_offset 3, -24
 966              		.cfi_offset 4, -20
 967              		.cfi_offset 5, -16
 968              		.cfi_offset 6, -12
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 0746     		mov	r7, r0
 972 0004 0E46     		mov	r6, r1
 195:Src/oleds.c   **** 	unsigned char c=0,i=0;	
 973              		.loc 1 195 2 is_stmt 1 view .LVU227
 974              	.LVL128:
 196:Src/oleds.c   **** 		c=chr-' ';//去掉末尾空字符		
 975              		.loc 1 196 3 view .LVU228
 976              		.loc 1 196 4 is_stmt 0 view .LVU229
 977 0006 203A     		subs	r2, r2, #32
 978              	.LVL129:
 979              		.loc 1 196 4 view .LVU230
 980 0008 D5B2     		uxtb	r5, r2
 981              	.LVL130:
 197:Src/oleds.c   **** 		if(x>128-1){x=0;y=y+2;}
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 23


 982              		.loc 1 197 3 is_stmt 1 view .LVU231
 983              		.loc 1 197 5 is_stmt 0 view .LVU232
 984 000a 10F0800F 		tst	r0, #128
 985 000e 13D1     		bne	.L75
 986              	.LVL131:
 987              	.L65:
 198:Src/oleds.c   **** 		if(Char_Size ==16)
 988              		.loc 1 198 3 is_stmt 1 view .LVU233
 989              		.loc 1 198 5 is_stmt 0 view .LVU234
 990 0010 102B     		cmp	r3, #16
 991 0012 15D0     		beq	.L76
 199:Src/oleds.c   **** 			{
 200:Src/oleds.c   **** 			OLED_SetPos(x,y);	
 201:Src/oleds.c   **** 			for(i=0;i<8;i++)
 202:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 203:Src/oleds.c   **** 			OLED_SetPos(x,y+1);
 204:Src/oleds.c   **** 			for(i=0;i<8;i++)
 205:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 206:Src/oleds.c   **** 			}
 207:Src/oleds.c   **** 			else {	
 208:Src/oleds.c   **** 				OLED_SetPos(x,y);
 992              		.loc 1 208 5 is_stmt 1 view .LVU235
 993 0014 3146     		mov	r1, r6
 994 0016 3846     		mov	r0, r7
 995 0018 FFF7FEFF 		bl	OLED_SetPos
 996              	.LVL132:
 209:Src/oleds.c   **** 				for(i=0;i<6;i++)
 997              		.loc 1 209 5 view .LVU236
 998              		.loc 1 209 10 is_stmt 0 view .LVU237
 999 001c 0024     		movs	r4, #0
 1000              	.LVL133:
 1001              	.L72:
 1002              		.loc 1 209 13 is_stmt 1 discriminator 1 view .LVU238
 1003              		.loc 1 209 5 is_stmt 0 discriminator 1 view .LVU239
 1004 001e 052C     		cmp	r4, #5
 1005 0020 30D8     		bhi	.L64
 210:Src/oleds.c   **** 				WriteDat(F6x8[c][i]);
 1006              		.loc 1 210 5 is_stmt 1 discriminator 3 view .LVU240
 1007 0022 05EB4503 		add	r3, r5, r5, lsl #1
 1008 0026 184A     		ldr	r2, .L77
 1009 0028 02EB4303 		add	r3, r2, r3, lsl #1
 1010 002c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1011 002e FFF7FEFF 		bl	WriteDat
 1012              	.LVL134:
 209:Src/oleds.c   **** 				for(i=0;i<6;i++)
 1013              		.loc 1 209 17 discriminator 3 view .LVU241
 209:Src/oleds.c   **** 				for(i=0;i<6;i++)
 1014              		.loc 1 209 18 is_stmt 0 discriminator 3 view .LVU242
 1015 0032 0134     		adds	r4, r4, #1
 1016              	.LVL135:
 209:Src/oleds.c   **** 				for(i=0;i<6;i++)
 1017              		.loc 1 209 18 discriminator 3 view .LVU243
 1018 0034 E4B2     		uxtb	r4, r4
 1019              	.LVL136:
 209:Src/oleds.c   **** 				for(i=0;i<6;i++)
 1020              		.loc 1 209 18 discriminator 3 view .LVU244
 1021 0036 F2E7     		b	.L72
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 24


 1022              	.LVL137:
 1023              	.L75:
 197:Src/oleds.c   **** 		if(Char_Size ==16)
 1024              		.loc 1 197 15 is_stmt 1 discriminator 1 view .LVU245
 197:Src/oleds.c   **** 		if(Char_Size ==16)
 1025              		.loc 1 197 19 discriminator 1 view .LVU246
 197:Src/oleds.c   **** 		if(Char_Size ==16)
 1026              		.loc 1 197 20 is_stmt 0 discriminator 1 view .LVU247
 1027 0038 0236     		adds	r6, r6, #2
 1028 003a F6B2     		uxtb	r6, r6
 1029              	.LVL138:
 197:Src/oleds.c   **** 		if(Char_Size ==16)
 1030              		.loc 1 197 16 discriminator 1 view .LVU248
 1031 003c 0027     		movs	r7, #0
 1032 003e E7E7     		b	.L65
 1033              	.LVL139:
 1034              	.L76:
 200:Src/oleds.c   **** 			for(i=0;i<8;i++)
 1035              		.loc 1 200 4 is_stmt 1 view .LVU249
 1036 0040 3146     		mov	r1, r6
 1037 0042 3846     		mov	r0, r7
 1038 0044 FFF7FEFF 		bl	OLED_SetPos
 1039              	.LVL140:
 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1040              		.loc 1 201 4 view .LVU250
 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1041              		.loc 1 201 9 is_stmt 0 view .LVU251
 1042 0048 0024     		movs	r4, #0
 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1043              		.loc 1 201 4 view .LVU252
 1044 004a 07E0     		b	.L67
 1045              	.LVL141:
 1046              	.L68:
 202:Src/oleds.c   **** 			OLED_SetPos(x,y+1);
 1047              		.loc 1 202 4 is_stmt 1 discriminator 3 view .LVU253
 202:Src/oleds.c   **** 			OLED_SetPos(x,y+1);
 1048              		.loc 1 202 23 is_stmt 0 discriminator 3 view .LVU254
 1049 004c 04EB0513 		add	r3, r4, r5, lsl #4
 202:Src/oleds.c   **** 			OLED_SetPos(x,y+1);
 1050              		.loc 1 202 4 discriminator 3 view .LVU255
 1051 0050 0E4A     		ldr	r2, .L77+4
 1052 0052 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1053 0054 FFF7FEFF 		bl	WriteDat
 1054              	.LVL142:
 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1055              		.loc 1 201 16 is_stmt 1 discriminator 3 view .LVU256
 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1056              		.loc 1 201 17 is_stmt 0 discriminator 3 view .LVU257
 1057 0058 0134     		adds	r4, r4, #1
 1058              	.LVL143:
 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1059              		.loc 1 201 17 discriminator 3 view .LVU258
 1060 005a E4B2     		uxtb	r4, r4
 1061              	.LVL144:
 1062              	.L67:
 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1063              		.loc 1 201 12 is_stmt 1 discriminator 1 view .LVU259
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 25


 201:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i]);
 1064              		.loc 1 201 4 is_stmt 0 discriminator 1 view .LVU260
 1065 005c 072C     		cmp	r4, #7
 1066 005e F5D9     		bls	.L68
 203:Src/oleds.c   **** 			for(i=0;i<8;i++)
 1067              		.loc 1 203 4 is_stmt 1 view .LVU261
 1068 0060 711C     		adds	r1, r6, #1
 1069 0062 C9B2     		uxtb	r1, r1
 1070 0064 3846     		mov	r0, r7
 1071 0066 FFF7FEFF 		bl	OLED_SetPos
 1072              	.LVL145:
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1073              		.loc 1 204 4 view .LVU262
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1074              		.loc 1 204 9 is_stmt 0 view .LVU263
 1075 006a 0024     		movs	r4, #0
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1076              		.loc 1 204 4 view .LVU264
 1077 006c 08E0     		b	.L69
 1078              	.LVL146:
 1079              	.L70:
 205:Src/oleds.c   **** 			}
 1080              		.loc 1 205 4 is_stmt 1 discriminator 3 view .LVU265
 205:Src/oleds.c   **** 			}
 1081              		.loc 1 205 23 is_stmt 0 discriminator 3 view .LVU266
 1082 006e 04EB0513 		add	r3, r4, r5, lsl #4
 205:Src/oleds.c   **** 			}
 1083              		.loc 1 205 25 discriminator 3 view .LVU267
 1084 0072 0833     		adds	r3, r3, #8
 205:Src/oleds.c   **** 			}
 1085              		.loc 1 205 4 discriminator 3 view .LVU268
 1086 0074 054A     		ldr	r2, .L77+4
 1087 0076 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1088 0078 FFF7FEFF 		bl	WriteDat
 1089              	.LVL147:
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1090              		.loc 1 204 16 is_stmt 1 discriminator 3 view .LVU269
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1091              		.loc 1 204 17 is_stmt 0 discriminator 3 view .LVU270
 1092 007c 0134     		adds	r4, r4, #1
 1093              	.LVL148:
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1094              		.loc 1 204 17 discriminator 3 view .LVU271
 1095 007e E4B2     		uxtb	r4, r4
 1096              	.LVL149:
 1097              	.L69:
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1098              		.loc 1 204 12 is_stmt 1 discriminator 1 view .LVU272
 204:Src/oleds.c   **** 			WriteDat(F8X16[c*16+i+8]);
 1099              		.loc 1 204 4 is_stmt 0 discriminator 1 view .LVU273
 1100 0080 072C     		cmp	r4, #7
 1101 0082 F4D9     		bls	.L70
 1102              	.L64:
 211:Src/oleds.c   **** 				
 212:Src/oleds.c   **** 			}
 213:Src/oleds.c   **** }
 1103              		.loc 1 213 1 view .LVU274
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 26


 1104 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1105              	.LVL150:
 1106              	.L78:
 1107              		.loc 1 213 1 view .LVU275
 1108 0086 00BF     		.align	2
 1109              	.L77:
 1110 0088 00000000 		.word	.LANCHOR0
 1111 008c 00000000 		.word	.LANCHOR1
 1112              		.cfi_endproc
 1113              	.LFE141:
 1115              		.section	.text.oled_pow,"ax",%progbits
 1116              		.align	1
 1117              		.global	oled_pow
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1121              		.fpu fpv4-sp-d16
 1123              	oled_pow:
 1124              	.LVL151:
 1125              	.LFB142:
 214:Src/oleds.c   **** u32 oled_pow(u8 m,u8 n)
 215:Src/oleds.c   **** {
 1126              		.loc 1 215 1 is_stmt 1 view -0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 1131              		.loc 1 215 1 is_stmt 0 view .LVU277
 1132 0000 0246     		mov	r2, r0
 216:Src/oleds.c   **** 	u32 result=1;	 
 1133              		.loc 1 216 2 is_stmt 1 view .LVU278
 1134              	.LVL152:
 217:Src/oleds.c   **** 	while(n--)result*=m;    
 1135              		.loc 1 217 2 view .LVU279
 216:Src/oleds.c   **** 	u32 result=1;	 
 1136              		.loc 1 216 6 is_stmt 0 view .LVU280
 1137 0002 0120     		movs	r0, #1
 1138              	.LVL153:
 1139              	.L80:
 1140              		.loc 1 217 7 is_stmt 1 discriminator 1 view .LVU281
 1141              		.loc 1 217 9 is_stmt 0 discriminator 1 view .LVU282
 1142 0004 4B1E     		subs	r3, r1, #1
 1143 0006 DBB2     		uxtb	r3, r3
 1144              	.LVL154:
 1145              		.loc 1 217 7 discriminator 1 view .LVU283
 1146 0008 19B1     		cbz	r1, .L82
 1147              		.loc 1 217 12 is_stmt 1 discriminator 2 view .LVU284
 1148              		.loc 1 217 18 is_stmt 0 discriminator 2 view .LVU285
 1149 000a 02FB00F0 		mul	r0, r2, r0
 1150              	.LVL155:
 1151              		.loc 1 217 9 discriminator 2 view .LVU286
 1152 000e 1946     		mov	r1, r3
 1153 0010 F8E7     		b	.L80
 1154              	.L82:
 218:Src/oleds.c   **** 	return result;
 219:Src/oleds.c   **** }	
 1155              		.loc 1 219 1 view .LVU287
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 27


 1156 0012 7047     		bx	lr
 1157              		.cfi_endproc
 1158              	.LFE142:
 1160              		.section	.text.OLED_ShowNum,"ax",%progbits
 1161              		.align	1
 1162              		.global	OLED_ShowNum
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu fpv4-sp-d16
 1168              	OLED_ShowNum:
 1169              	.LVL156:
 1170              	.LFB143:
 220:Src/oleds.c   **** 
 221:Src/oleds.c   **** 
 222:Src/oleds.c   **** //显示数字
 223:Src/oleds.c   **** //x,y :设置显示坐标	 
 224:Src/oleds.c   **** //len :数字长度（位数）
 225:Src/oleds.c   **** //size:字符大小
 226:Src/oleds.c   **** //mode:
 227:Src/oleds.c   **** //num:数字(0~4294967295);	 		  
 228:Src/oleds.c   **** void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 229:Src/oleds.c   **** {         	
 1171              		.loc 1 229 1 is_stmt 1 view -0
 1172              		.cfi_startproc
 1173              		@ args = 4, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		.loc 1 229 1 is_stmt 0 view .LVU289
 1176 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1177              	.LCFI16:
 1178              		.cfi_def_cfa_offset 40
 1179              		.cfi_offset 3, -40
 1180              		.cfi_offset 4, -36
 1181              		.cfi_offset 5, -32
 1182              		.cfi_offset 6, -28
 1183              		.cfi_offset 7, -24
 1184              		.cfi_offset 8, -20
 1185              		.cfi_offset 9, -16
 1186              		.cfi_offset 10, -12
 1187              		.cfi_offset 11, -8
 1188              		.cfi_offset 14, -4
 1189 0004 8346     		mov	fp, r0
 1190 0006 8A46     		mov	r10, r1
 1191 0008 9146     		mov	r9, r2
 1192 000a 1E46     		mov	r6, r3
 1193 000c 9DF82870 		ldrb	r7, [sp, #40]	@ zero_extendqisi2
 230:Src/oleds.c   **** 	u8 t,temp;
 1194              		.loc 1 230 2 is_stmt 1 view .LVU290
 231:Src/oleds.c   **** 	u8 enshow=0;						   
 1195              		.loc 1 231 2 view .LVU291
 1196              	.LVL157:
 232:Src/oleds.c   **** 	for(t=0;t<len;t++)
 1197              		.loc 1 232 2 view .LVU292
 231:Src/oleds.c   **** 	u8 enshow=0;						   
 1198              		.loc 1 231 5 is_stmt 0 view .LVU293
 1199 0010 4FF00008 		mov	r8, #0
 1200              		.loc 1 232 7 view .LVU294
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 28


 1201 0014 4546     		mov	r5, r8
 1202              		.loc 1 232 2 view .LVU295
 1203 0016 19E0     		b	.L84
 1204              	.LVL158:
 1205              	.L91:
 233:Src/oleds.c   **** 	{
 234:Src/oleds.c   **** 		temp=(num/oled_pow(10,len-t-1))%10;
 235:Src/oleds.c   **** 		if(enshow==0&&t<(len-1))
 236:Src/oleds.c   **** 		{
 237:Src/oleds.c   **** 			if(temp==0)
 238:Src/oleds.c   **** 			{
 239:Src/oleds.c   **** 				OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 1206              		.loc 1 239 5 is_stmt 1 view .LVU296
 1207              		.loc 1 239 30 is_stmt 0 view .LVU297
 1208 0018 7808     		lsrs	r0, r7, #1
 1209 001a 10FB05F0 		smulbb	r0, r0, r5
 1210              		.loc 1 239 5 view .LVU298
 1211 001e 5BFA80F0 		uxtab	r0, fp, r0
 1212 0022 3B46     		mov	r3, r7
 1213 0024 2022     		movs	r2, #32
 1214 0026 5146     		mov	r1, r10
 1215 0028 C0B2     		uxtb	r0, r0
 1216 002a FFF7FEFF 		bl	OLED_ShowChar
 1217              	.LVL159:
 240:Src/oleds.c   **** 				continue;
 1218              		.loc 1 240 5 is_stmt 1 view .LVU299
 1219 002e 0BE0     		b	.L86
 1220              	.LVL160:
 1221              	.L85:
 241:Src/oleds.c   **** 			}else enshow=1; 
 242:Src/oleds.c   **** 		 	 
 243:Src/oleds.c   **** 		}
 244:Src/oleds.c   **** 	 	OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 1222              		.loc 1 244 4 view .LVU300
 1223              		.loc 1 244 29 is_stmt 0 view .LVU301
 1224 0030 7808     		lsrs	r0, r7, #1
 1225 0032 10FB05F0 		smulbb	r0, r0, r5
 1226              		.loc 1 244 4 view .LVU302
 1227 0036 3034     		adds	r4, r4, #48
 1228              	.LVL161:
 1229              		.loc 1 244 4 view .LVU303
 1230 0038 5BFA80F0 		uxtab	r0, fp, r0
 1231 003c 3B46     		mov	r3, r7
 1232 003e E2B2     		uxtb	r2, r4
 1233 0040 5146     		mov	r1, r10
 1234 0042 C0B2     		uxtb	r0, r0
 1235 0044 FFF7FEFF 		bl	OLED_ShowChar
 1236              	.LVL162:
 1237              	.L86:
 232:Src/oleds.c   **** 	{
 1238              		.loc 1 232 16 is_stmt 1 discriminator 2 view .LVU304
 232:Src/oleds.c   **** 	{
 1239              		.loc 1 232 17 is_stmt 0 discriminator 2 view .LVU305
 1240 0048 0135     		adds	r5, r5, #1
 1241              	.LVL163:
 232:Src/oleds.c   **** 	{
 1242              		.loc 1 232 17 discriminator 2 view .LVU306
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 29


 1243 004a EDB2     		uxtb	r5, r5
 1244              	.LVL164:
 1245              	.L84:
 232:Src/oleds.c   **** 	{
 1246              		.loc 1 232 10 is_stmt 1 discriminator 1 view .LVU307
 232:Src/oleds.c   **** 	{
 1247              		.loc 1 232 2 is_stmt 0 discriminator 1 view .LVU308
 1248 004c B542     		cmp	r5, r6
 1249 004e 1CD2     		bcs	.L90
 234:Src/oleds.c   **** 		if(enshow==0&&t<(len-1))
 1250              		.loc 1 234 3 is_stmt 1 view .LVU309
 234:Src/oleds.c   **** 		if(enshow==0&&t<(len-1))
 1251              		.loc 1 234 28 is_stmt 0 view .LVU310
 1252 0050 711B     		subs	r1, r6, r5
 1253 0052 C9B2     		uxtb	r1, r1
 234:Src/oleds.c   **** 		if(enshow==0&&t<(len-1))
 1254              		.loc 1 234 13 view .LVU311
 1255 0054 0139     		subs	r1, r1, #1
 1256 0056 C9B2     		uxtb	r1, r1
 1257 0058 0A20     		movs	r0, #10
 1258 005a FFF7FEFF 		bl	oled_pow
 1259              	.LVL165:
 234:Src/oleds.c   **** 		if(enshow==0&&t<(len-1))
 1260              		.loc 1 234 12 view .LVU312
 1261 005e B9FBF0F0 		udiv	r0, r9, r0
 234:Src/oleds.c   **** 		if(enshow==0&&t<(len-1))
 1262              		.loc 1 234 34 view .LVU313
 1263 0062 0B4C     		ldr	r4, .L92
 1264 0064 A4FB0034 		umull	r3, r4, r4, r0
 1265 0068 E408     		lsrs	r4, r4, #3
 1266 006a 04EB8404 		add	r4, r4, r4, lsl #2
 1267 006e A0EB4404 		sub	r4, r0, r4, lsl #1
 234:Src/oleds.c   **** 		if(enshow==0&&t<(len-1))
 1268              		.loc 1 234 7 view .LVU314
 1269 0072 E4B2     		uxtb	r4, r4
 1270              	.LVL166:
 235:Src/oleds.c   **** 		{
 1271              		.loc 1 235 3 is_stmt 1 view .LVU315
 235:Src/oleds.c   **** 		{
 1272              		.loc 1 235 5 is_stmt 0 view .LVU316
 1273 0074 B8F1000F 		cmp	r8, #0
 1274 0078 DAD1     		bne	.L85
 235:Src/oleds.c   **** 		{
 1275              		.loc 1 235 23 discriminator 1 view .LVU317
 1276 007a 731E     		subs	r3, r6, #1
 235:Src/oleds.c   **** 		{
 1277              		.loc 1 235 15 discriminator 1 view .LVU318
 1278 007c 9D42     		cmp	r5, r3
 1279 007e D7DA     		bge	.L85
 237:Src/oleds.c   **** 			{
 1280              		.loc 1 237 4 is_stmt 1 view .LVU319
 237:Src/oleds.c   **** 			{
 1281              		.loc 1 237 6 is_stmt 0 view .LVU320
 1282 0080 002C     		cmp	r4, #0
 1283 0082 C9D0     		beq	.L91
 241:Src/oleds.c   **** 		 	 
 1284              		.loc 1 241 16 view .LVU321
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 30


 1285 0084 4FF00108 		mov	r8, #1
 1286              	.LVL167:
 241:Src/oleds.c   **** 		 	 
 1287              		.loc 1 241 16 view .LVU322
 1288 0088 D2E7     		b	.L85
 1289              	.LVL168:
 1290              	.L90:
 245:Src/oleds.c   **** 	}
 246:Src/oleds.c   **** }
 1291              		.loc 1 246 1 view .LVU323
 1292 008a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1293              	.LVL169:
 1294              	.L93:
 1295              		.loc 1 246 1 view .LVU324
 1296 008e 00BF     		.align	2
 1297              	.L92:
 1298 0090 CDCCCCCC 		.word	-858993459
 1299              		.cfi_endproc
 1300              	.LFE143:
 1302              		.global	BMP1
 1303              		.global	F8X16
 1304              		.global	F6x8
 1305              		.global	F16x16
 1306              		.section	.data.BMP1,"aw"
 1307              		.align	2
 1310              	BMP1:
 1311 0000 00030509 		.ascii	"\000\003\005\011\021\377\021\211\005\303\000\340\000"
 1311      11FF1189 
 1311      05C300E0 
 1311      00
 1312 000d F000F800 		.ascii	"\360\000\370\000\000\000\000\000\000\000D(\377\021\252"
 1312      00000000 
 1312      00004428 
 1312      FF11AA
 1313 001c 44000000 		.ascii	"D\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1313      00000000 
 1313      00000000 
 1313      0000
 1314 002a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1314      00000000 
 1314      00000000 
 1314      00
 1315 0037 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1315      00000000 
 1315      00000000 
 1315      00
 1316 0044 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1316      00000000 
 1316      00000000 
 1316      00
 1317 0051 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\203\0018D\202\222"
 1317      00000000 
 1317      00830138 
 1317      448292
 1318 0060 92740183 		.ascii	"\222t\001\203\000\000\000\000\000\000\000|D\307\001"
 1318      00000000 
 1318      0000007C 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 31


 1318      44C701
 1319 006f 7D7D7D7D 		.ascii	"}}}}\001}}}}\001}}}}\001\377\000\000\000\000\000\000"
 1319      017D7D7D 
 1319      7D017D7D 
 1319      7D7D01FF 
 1319      00000000 
 1320 0085 01000100 		.ascii	"\001\000\001\000\001\000\001\000\001\000\001\000\000"
 1320      01000100 
 1320      01000100 
 1320      00
 1321 0092 00000000 		.ascii	"\000\000\000\000\000\000\000\001\001\000\000\000\000"
 1321      00000001 
 1321      01000000 
 1321      00
 1322 009f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1322      00000000 
 1322      00000000 
 1322      00
 1323 00ac 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1323      00000000 
 1323      00000000 
 1323      00
 1324 00b9 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1324      00000000 
 1324      00000000 
 1324      00
 1325 00c6 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1325      00000000 
 1325      00000000 
 1325      00
 1326 00d3 00000000 		.ascii	"\000\000\000\000\000\000\000\001\001\000\000\000\000"
 1326      00000001 
 1326      01000000 
 1326      00
 1327 00e0 00000101 		.ascii	"\000\000\001\001\000\000\000\000\000\000\000\000\000"
 1327      00000000 
 1327      00000000 
 1327      00
 1328 00ed 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 1328      01010101 
 1328      01010101 
 1328      01
 1329 00fa 01010101 		.ascii	"\001\001\001\001\001\000\000\000\000\000\000\000\000"
 1329      01000000 
 1329      00000000 
 1329      00
 1330 0107 00004040 		.ascii	"\000\000@@@@@\000\000mmmmm\000\000`````\000\000@@@@"
 1330      40404000 
 1330      006D6D6D 
 1330      6D6D0000 
 1330      60606060 
 1331 0122 40000000 		.ascii	"@\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1331      00000000 
 1331      00000000 
 1331      0000
 1332 0130 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1332      00000000 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 32


 1332      00000000 
 1332      00
 1333 013d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1333      00000000 
 1333      00000000 
 1333      00
 1334 014a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1334      00000000 
 1334      00000000 
 1334      00
 1335 0157 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1335      00000000 
 1335      00000000 
 1335      00
 1336 0164 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1336      00000000 
 1336      00000000 
 1336      00
 1337 0171 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1337      00000000 
 1337      00000000 
 1337      00
 1338 017e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\333\333"
 1338      00000000 
 1338      000000DB 
 1338      DB
 1339 018b DBDBDB00 		.ascii	"\333\333\333\000\000\333\333\333\333\333\000\000\333"
 1339      00DBDBDB 
 1339      DBDB0000 
 1339      DB
 1340 0198 DBDBDBDB 		.ascii	"\333\333\333\333\000\000\333\333\333\333\333\000\000"
 1340      0000DBDB 
 1340      DBDBDB00 
 1340      00
 1341 01a5 DADADADA 		.ascii	"\332\332\332\332\332\000\000\330\330\330\330\330\000"
 1341      DA0000D8 
 1341      D8D8D8D8 
 1341      00
 1342 01b2 00C0C0C0 		.ascii	"\000\300\300\300\300\300\000\000\300\300\300\300\300"
 1342      C0C00000 
 1342      C0C0C0C0 
 1342      C0
 1343 01bf 0000C0C0 		.ascii	"\000\000\300\300\300\300\300\000\000\300\300\300\300"
 1343      C0C0C000 
 1343      00C0C0C0 
 1343      C0
 1344 01cc C0000080 		.ascii	"\300\000\000\200\200\200\200\200\000\000\000\000\000"
 1344      80808080 
 1344      00000000 
 1344      00
 1345 01d9 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1345      00000000 
 1345      00000000 
 1345      00
 1346 01e6 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1346      00000000 
 1346      00000000 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 33


 1346      00
 1347 01f3 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1347      00000000 
 1347      00000000 
 1347      00
 1348 0200 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\006\006\006\006"
 1348      00000000 
 1348      00060606 
 1348      06
 1349 020d 06000006 		.ascii	"\006\000\000\006\006\006\006\006\000\000\006\006\006"
 1349      06060606 
 1349      00000606 
 1349      06
 1350 021a 06060000 		.ascii	"\006\006\000\000\006\006\006\006\006\000\000\006\006"
 1350      06060606 
 1350      06000006 
 1350      06
 1351 0227 06E66620 		.ascii	"\006\346f \000\006\006\206\006\006\000\000\006\006\006"
 1351      00060686 
 1351      06060000 
 1351      060606
 1352 0236 06860000 		.ascii	"\006\206\000\000\006\006\006\006\006\000\000\206\206"
 1352      06060606 
 1352      06000086 
 1352      86
 1353 0243 86868680 		.ascii	"\206\206\206\200\200\206\206\006\206\206\300\300\206"
 1353      80868606 
 1353      8686C0C0 
 1353      86
 1354 0250 86860606 		.ascii	"\206\206\006\006\3200v\006\006\006\006\000\000\006\006"
 1354      D0307606 
 1354      06060600 
 1354      000606
 1355 025f 06060600 		.ascii	"\006\006\006\000\000\006\006\006\006\006\000\000\006"
 1355      00060606 
 1355      06060000 
 1355      06
 1356 026c 06060606 		.ascii	"\006\006\006\006\000\000\006\006\006\006\006\000\000"
 1356      00000606 
 1356      06060600 
 1356      00
 1357 0279 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1357      00000000 
 1357      00000000 
 1357      00
 1358 0286 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1358      00000000 
 1358      00000000 
 1358      00
 1359 0293 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1359      00000000 
 1359      00000000 
 1359      00
 1360 02a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000`\034\000\376"
 1360      00000000 
 1360      0000601C 
 1360      00FE
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 34


 1361 02ae 00010200 		.ascii	"\000\001\002\000\304\030 \002\236c\262\016\000\377\201"
 1361      C4182002 
 1361      9E63B20E 
 1361      00FF81
 1362 02bd 81FF0000 		.ascii	"\201\377\000\000\200@0\017\000\000\000\000\377\000#"
 1362      8040300F 
 1362      00000000 
 1362      FF0023
 1363 02cc EAAABFAA 		.ascii	"\352\252\277\252\352\003?\000\377\000\000\000\000\000"
 1363      EA033F00 
 1363      FF000000 
 1363      0000
 1364 02da 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1364      00000000 
 1364      00000000 
 1364      00
 1365 02e7 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1365      00000000 
 1365      00000000 
 1365      00
 1366 02f4 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1366      00000000 
 1366      00000000 
 1366      00
 1367 0301 00008080 		.ascii	"\000\000\200\200\200\000\000\000\000\000\200\200\200"
 1367      80000000 
 1367      00008080 
 1367      80
 1368 030e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1368      00000000 
 1368      00000000 
 1368      00
 1369 031b 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1369      00000000 
 1369      00000000 
 1369      00
 1370 0328 0E0C0800 		.ascii	"\016\014\010\000\000\001\001\001\001\001\000\000\000"
 1370      00010101 
 1370      01010000 
 1370      00
 1371 0335 01000000 		.ascii	"\001\000\000\000\001\000\201\200\200\201\200\201\200"
 1371      01008180 
 1371      80818081 
 1371      80
 1372 0342 80808001 		.ascii	"\200\200\200\001\001\001\001\000\000\000\001\000\000"
 1372      01010100 
 1372      00000100 
 1372      00
 1373 034f 00010001 		.ascii	"\000\001\000\001\001\011\014\016\000\000\000\000\000"
 1373      01090C0E 
 1373      00000000 
 1373      00
 1374 035c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\300"
 1374      00000000 
 1374      00000000 
 1374      C0
 1375 0369 C0C0C0C0 		.ascii	"\300\300\300\300\300\300\300\300\300\300\300\300\300"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 35


 1375      C0C0C0C0 
 1375      C0C0C0C0 
 1375      C0
 1376 0376 C0C0C0C0 		.ascii	"\300\300\300\300\300\300\300\300\300\000\000\036!@@"
 1376      C0C0C0C0 
 1376      C000001E 
 1376      214040
 1377 0385 50215E00 		.ascii	"P!^\000\036!@@P!^\000\000\000\000\000\000\000\000\000"
 1377      1E214040 
 1377      50215E00 
 1377      00000000 
 1377      00000000 
 1378 0399 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1378      00000000 
 1378      00000000 
 1378      00
 1379 03a6 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1379      00000000 
 1379      00000000 
 1379      00
 1380 03b3 00000000 		.ascii	"\000\000\000\000\000\000\000\000\377\377\301\301\377"
 1380      00000000 
 1380      FFFFC1C1 
 1380      FF
 1381 03c0 FFC1C1FF 		.ascii	"\377\301\301\377\377\000\000\000\000\000\000\000\000"
 1381      FF000000 
 1381      00000000 
 1381      00
 1382 03cd 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1382      00000000 
 1382      00000000 
 1382      00
 1383 03da 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1383      00000000 
 1383      00000000 
 1383      00
 1384 03e7 00FFFF80 		.ascii	"\000\377\377\200\374\363\357\363\374\200\377\200\356"
 1384      FCF3EFF3 
 1384      FC80FF80 
 1384      EE
 1385 03f4 EEEEF5FB 		.ascii	"\356\356\365\373\377\234\276\266\266\210\377\000"
 1385      FF9CBEB6 
 1385      B688FF00 
 1386              		.section	.data.F16x16,"aw"
 1387              		.align	2
 1388              		.set	.LANCHOR2,. + 0
 1391              	F16x16:
 1392 0000 10945332 		.ascii	"\020\224S2\0362R\020\000~BBB~\000\000\000\000\000\377"
 1392      1E325210 
 1392      007E4242 
 1392      427E0000 
 1392      000000FF 
 1393 0014 49494949 		.ascii	"IIIIIII\377\000\000\000\000\010\314JIHJ\314\030\000"
 1393      494949FF 
 1393      00000000 
 1393      08CC4A49 
 1393      484ACC18 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 36


 1394 0029 7F888884 		.ascii	"\177\210\210\204\202\340\000\000\377\022\022R\222\177"
 1394      82E00000 
 1394      FF121252 
 1394      927F
 1395 0037 00007E88 		.ascii	"\000\000~\210\210\204\202\340\000@ \360($'$\344$4, "
 1395      888482E0 
 1395      004020F0 
 1395      28242724 
 1395      E424342C 
 1396 004c E0000000 		.ascii	"\340\000\000\000@@OIIIIOIIIIO@@\000PHGD\374DDD\000\004"
 1396      40404F49 
 1396      4949494F 
 1396      49494949 
 1396      4F404000 
 1397 006a 04FC0404 		.ascii	"\004\374\004\004\004\000\000>  ?\020\020~   ?   \000"
 1397      0400003E 
 1397      20203F10 
 1397      107E2020 
 1397      203F2020 
 1398 0080 04244484 		.ascii	"\004$D\204d\234@0\017\310\010\010(\030\000\000\020\010"
 1398      649C4030 
 1398      0FC80808 
 1398      28180000 
 1398      1008
 1399 0092 0601824C 		.ascii	"\006\001\202L \030\006\001\006\030 @\200\000@@B\314"
 1399      20180601 
 1399      06182040 
 1399      80004040 
 1399      42CC
 1400 00a4 0000FC04 		.ascii	"\000\000\374\004\002\000\374\004\004\374\000\000\000"
 1400      0200FC04 
 1400      04FC0000 
 1400      00
 1401 00b1 40201F20 		.ascii	"@ \037 @ODB@\177BDC@\000@@B\314\000\200\210\210\377"
 1401      404F4442 
 1401      407F4244 
 1401      43400040 
 1401      4042CC00 
 1402 00c9 8888FF88 		.ascii	"\210\210\377\210\210\200\000\000@ \037 @PLC@@_@@@\000"
 1402      88800000 
 1402      40201F20 
 1402      40504C43 
 1402      40405F40 
 1403 00e0 00000000 		.ascii	"\000\000\000\000\000\001\342\034\340\000\000\000\000"
 1403      0001E21C 
 1403      E0000000 
 1403      00
 1404 00ed 00000080 		.ascii	"\000\000\000\200@ \020\014\003\000\000\000\003\0140"
 1404      4020100C 
 1404      03000000 
 1404      030C30
 1405 00fc 40808000 		.ascii	"@\200\200\000\000\002\002\302\002\002\002\376\202\202"
 1405      000202C2 
 1405      020202FE 
 1405      8282
 1406 010a 82828202 		.ascii	"\202\202\202\002\000\000@@@\177@@@\177@@@@@@@\000\010"
 1406      00004040 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 37


 1406      407F4040 
 1406      407F4040 
 1406      40404040 
 1407 0121 0888C838 		.ascii	"\010\210\3108\014\013\010\010\350\010\010\010\010\010"
 1407      0C0B0808 
 1407      E8080808 
 1407      0808
 1408 012f 00020100 		.ascii	"\000\002\001\000\377@AAAA\177AAAA@\000\002\376\222\222"
 1408      FF404141 
 1408      41417F41 
 1408      41414140 
 1408      0002FE92 
 1409 0144 FE020010 		.ascii	"\376\002\000\020\021\026\360\024\023\020\000\000\020"
 1409      1116F014 
 1409      13100000 
 1409      10
 1410 0151 1F0808FF 		.ascii	"\037\010\010\377\004\201A1\015\003\0151A\201\000\000"
 1410      04814131 
 1410      0D030D31 
 1410      41810000 
 1411 0161 FE022242 		.ascii	"\376\002\"B\202r\002\"B\202r\002\376\000\000\000\377"
 1411      82720222 
 1411      42827202 
 1411      FE000000 
 1411      FF
 1412 0172 10080601 		.ascii	"\020\010\006\001\016\020\010\006\001N\200\177\000\000"
 1412      0E100806 
 1412      014E807F 
 1412      0000
 1413 0180 1060028C 		.ascii	"\020`\002\214\000\000\376\222\222\222\222\222\376\000"
 1413      0000FE92 
 1413      92929292 
 1413      FE00
 1414 018e 00000404 		.ascii	"\000\000\004\004~\001@~BB~B~BB~@\000\000\000\374$$$"
 1414      7E01407E 
 1414      42427E42 
 1414      7E42427E 
 1414      40000000 
 1415 01a6 FC252624 		.ascii	"\374%&$\374$$$\004\000@0\217\200\204LU%%%UL\200\200"
 1415      FC242424 
 1415      04004030 
 1415      8F80844C 
 1415      55252525 
 1416 01be 80004040 		.ascii	"\200\000@@B\314\000\010H\210\010\010\010\377\010\010"
 1416      42CC0008 
 1416      48880808 
 1416      08FF0808 
 1417 01ce 08000040 		.ascii	"\010\000\000@ \037 @@A@HPO@@@\000\020`\002\214\000\370"
 1417      201F2040 
 1417      40414048 
 1417      504F4040 
 1417      40001060 
 1418 01e6 484848FF 		.ascii	"HHH\377**\012\312\030\000\004\004~\201`\037\200p\000"
 1418      2A2A0ACA 
 1418      18000404 
 1418      7E81601F 
 1418      807000
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 38


 1419 01f9 78838DC1 		.ascii	"x\203\215\301\011p\000\010$#j\252*\252j***\352\002\002"
 1419      09700008 
 1419      24236AAA 
 1419      2AAA6A2A 
 1419      2A2AEA02 
 1420 020e 00001011 		.ascii	"\000\000\020\021\025\025\025\377\025\025\025\021\020"
 1420      151515FF 
 1420      15151511 
 1420      10
 1421 021b 0F3040F8 		.ascii	"\0170@\370\000BB\"\022\372\226\222\222\222\222\222\362"
 1421      00424222 
 1421      12FA9692 
 1421      92929292 
 1421      F2
 1422 022c 02020200 		.ascii	"\002\002\002\000@D$\024\014D\200\177\004\010\020($B"
 1422      40442414 
 1422      0C44807F 
 1422      04081028 
 1422      2442
 1423 023e 40008082 		.ascii	"@\000\200\202\202\202\376\202\202\202\202\202\376\202"
 1423      8282FE82 
 1423      82828282 
 1423      FE82
 1424 024c 82828000 		.ascii	"\202\202\200\000\000\200@0\017\000\000\000\000\000\377"
 1424      00804030 
 1424      0F000000 
 1424      0000FF
 1425 025b 00000000 		.ascii	"\000\000\000\000\000\000\000\020\021\026\020\020\360"
 1425      00000010 
 1425      11161010 
 1425      F0
 1426 0268 10101413 		.ascii	"\020\020\024\023\020\000\000\000\201\201AA!\021\015"
 1426      10000000 
 1426      81814141 
 1426      21110D
 1427 0277 030D1121 		.ascii	"\003\015\021!AA\201\201\000"
 1427      41418181 
 1427      00
 1428              		.section	.rodata.F6x8,"a"
 1429              		.align	2
 1430              		.set	.LANCHOR0,. + 0
 1433              	F6x8:
 1434 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 1434      0000
 1435 0006 0000002F 		.ascii	"\000\000\000/\000\000"
 1435      0000
 1436 000c 00000700 		.ascii	"\000\000\007\000\007\000"
 1436      0700
 1437 0012 00147F14 		.ascii	"\000\024\177\024\177\024"
 1437      7F14
 1438 0018 00242A7F 		.ascii	"\000$*\177*\022"
 1438      2A12
 1439 001e 00626408 		.ascii	"\000bd\010\023#"
 1439      1323
 1440 0024 00364955 		.ascii	"\0006IU\"P"
 1440      2250
 1441 002a 00000503 		.ascii	"\000\000\005\003\000\000"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 39


 1441      0000
 1442 0030 00001C22 		.ascii	"\000\000\034\"A\000"
 1442      4100
 1443 0036 00004122 		.ascii	"\000\000A\"\034\000"
 1443      1C00
 1444 003c 0014083E 		.ascii	"\000\024\010>\010\024"
 1444      0814
 1445 0042 0008083E 		.ascii	"\000\010\010>\010\010"
 1445      0808
 1446 0048 000000A0 		.ascii	"\000\000\000\240`\000"
 1446      6000
 1447 004e 00080808 		.ascii	"\000\010\010\010\010\010"
 1447      0808
 1448 0054 00006060 		.ascii	"\000\000``\000\000"
 1448      0000
 1449 005a 00201008 		.ascii	"\000 \020\010\004\002"
 1449      0402
 1450 0060 003E5149 		.ascii	"\000>QIE>"
 1450      453E
 1451 0066 0000427F 		.ascii	"\000\000B\177@\000"
 1451      4000
 1452 006c 00426151 		.ascii	"\000BaQIF"
 1452      4946
 1453 0072 00214145 		.ascii	"\000!AEK1"
 1453      4B31
 1454 0078 00181412 		.ascii	"\000\030\024\022\177\020"
 1454      7F10
 1455 007e 00274545 		.ascii	"\000'EEE9"
 1455      4539
 1456 0084 003C4A49 		.ascii	"\000<JII0"
 1456      4930
 1457 008a 00017109 		.ascii	"\000\001q\011\005\003"
 1457      0503
 1458 0090 00364949 		.ascii	"\0006III6"
 1458      4936
 1459 0096 00064949 		.ascii	"\000\006II)\036"
 1459      291E
 1460 009c 00003636 		.ascii	"\000\00066\000\000"
 1460      0000
 1461 00a2 00005636 		.ascii	"\000\000V6\000\000"
 1461      0000
 1462 00a8 00081422 		.ascii	"\000\010\024\"A\000"
 1462      4100
 1463 00ae 00141414 		.ascii	"\000\024\024\024\024\024"
 1463      1414
 1464 00b4 00004122 		.ascii	"\000\000A\"\024\010"
 1464      1408
 1465 00ba 00020151 		.ascii	"\000\002\001Q\011\006"
 1465      0906
 1466 00c0 00324959 		.ascii	"\0002IYQ>"
 1466      513E
 1467 00c6 007C1211 		.ascii	"\000|\022\021\022|"
 1467      127C
 1468 00cc 007F4949 		.ascii	"\000\177III6"
 1468      4936
 1469 00d2 003E4141 		.ascii	"\000>AAA\""
 1469      4122
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 40


 1470 00d8 007F4141 		.ascii	"\000\177AA\"\034"
 1470      221C
 1471 00de 007F4949 		.ascii	"\000\177IIIA"
 1471      4941
 1472 00e4 007F0909 		.ascii	"\000\177\011\011\011\001"
 1472      0901
 1473 00ea 003E4149 		.ascii	"\000>AIIz"
 1473      497A
 1474 00f0 007F0808 		.ascii	"\000\177\010\010\010\177"
 1474      087F
 1475 00f6 0000417F 		.ascii	"\000\000A\177A\000"
 1475      4100
 1476 00fc 00204041 		.ascii	"\000 @A?\001"
 1476      3F01
 1477 0102 007F0814 		.ascii	"\000\177\010\024\"A"
 1477      2241
 1478 0108 007F4040 		.ascii	"\000\177@@@@"
 1478      4040
 1479 010e 007F020C 		.ascii	"\000\177\002\014\002\177"
 1479      027F
 1480 0114 007F0408 		.ascii	"\000\177\004\010\020\177"
 1480      107F
 1481 011a 003E4141 		.ascii	"\000>AAA>"
 1481      413E
 1482 0120 007F0909 		.ascii	"\000\177\011\011\011\006"
 1482      0906
 1483 0126 003E4151 		.ascii	"\000>AQ!^"
 1483      215E
 1484 012c 007F0919 		.ascii	"\000\177\011\031)F"
 1484      2946
 1485 0132 00464949 		.ascii	"\000FIII1"
 1485      4931
 1486 0138 0001017F 		.ascii	"\000\001\001\177\001\001"
 1486      0101
 1487 013e 003F4040 		.ascii	"\000?@@@?"
 1487      403F
 1488 0144 001F2040 		.ascii	"\000\037 @ \037"
 1488      201F
 1489 014a 003F4038 		.ascii	"\000?@8@?"
 1489      403F
 1490 0150 00631408 		.ascii	"\000c\024\010\024c"
 1490      1463
 1491 0156 00070870 		.ascii	"\000\007\010p\010\007"
 1491      0807
 1492 015c 00615149 		.ascii	"\000aQIEC"
 1492      4543
 1493 0162 00007F41 		.ascii	"\000\000\177AA\000"
 1493      4100
 1494 0168 00552A55 		.ascii	"\000U*U*U"
 1494      2A55
 1495 016e 00004141 		.ascii	"\000\000AA\177\000"
 1495      7F00
 1496 0174 00040201 		.ascii	"\000\004\002\001\002\004"
 1496      0204
 1497 017a 00404040 		.ascii	"\000@@@@@"
 1497      4040
 1498 0180 00000102 		.ascii	"\000\000\001\002\004\000"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 41


 1498      0400
 1499 0186 00205454 		.ascii	"\000 TTTx"
 1499      5478
 1500 018c 007F4844 		.ascii	"\000\177HDD8"
 1500      4438
 1501 0192 00384444 		.ascii	"\0008DDD "
 1501      4420
 1502 0198 00384444 		.ascii	"\0008DDH\177"
 1502      487F
 1503 019e 00385454 		.ascii	"\0008TTT\030"
 1503      5418
 1504 01a4 00087E09 		.ascii	"\000\010~\011\001\002"
 1504      0102
 1505 01aa 0018A4A4 		.ascii	"\000\030\244\244\244|"
 1505      A47C
 1506 01b0 007F0804 		.ascii	"\000\177\010\004\004x"
 1506      0478
 1507 01b6 0000447D 		.ascii	"\000\000D}@\000"
 1507      4000
 1508 01bc 00408084 		.ascii	"\000@\200\204}\000"
 1508      7D00
 1509 01c2 007F1028 		.ascii	"\000\177\020(D\000"
 1509      4400
 1510 01c8 0000417F 		.ascii	"\000\000A\177@\000"
 1510      4000
 1511 01ce 007C0418 		.ascii	"\000|\004\030\004x"
 1511      0478
 1512 01d4 007C0804 		.ascii	"\000|\010\004\004x"
 1512      0478
 1513 01da 00384444 		.ascii	"\0008DDD8"
 1513      4438
 1514 01e0 00FC2424 		.ascii	"\000\374$$$\030"
 1514      2418
 1515 01e6 00182424 		.ascii	"\000\030$$\030\374"
 1515      18FC
 1516 01ec 007C0804 		.ascii	"\000|\010\004\004\010"
 1516      0408
 1517 01f2 00485454 		.ascii	"\000HTTT "
 1517      5420
 1518 01f8 00043F44 		.ascii	"\000\004?D@ "
 1518      4020
 1519 01fe 003C4040 		.ascii	"\000<@@ |"
 1519      207C
 1520 0204 001C2040 		.ascii	"\000\034 @ \034"
 1520      201C
 1521 020a 003C4030 		.ascii	"\000<@0@<"
 1521      403C
 1522 0210 00442810 		.ascii	"\000D(\020(D"
 1522      2844
 1523 0216 001CA0A0 		.ascii	"\000\034\240\240\240|"
 1523      A07C
 1524 021c 00446454 		.ascii	"\000DdTLD"
 1524      4C44
 1525 0222 14141414 		.ascii	"\024\024\024\024\024\024"
 1525      1414
 1526              		.section	.rodata.F8X16,"a"
 1527              		.align	2
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 42


 1528              		.set	.LANCHOR1,. + 0
 1531              	F8X16:
 1532 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1532      00000000 
 1532      00000000 
 1532      00
 1533 000d 00000000 		.ascii	"\000\000\000\000\000\000\370\000\000\000\000\000\000"
 1533      0000F800 
 1533      00000000 
 1533      00
 1534 001a 00333000 		.ascii	"\00030\000\000\000\000\020\014\006\020\014\006\000\000"
 1534      00000010 
 1534      0C06100C 
 1534      060000
 1535 0029 00000000 		.ascii	"\000\000\000\000\000\000\000@\300x@\300x@\000\004?\004"
 1535      00000040 
 1535      C07840C0 
 1535      78400004 
 1535      3F04
 1536 003b 043F0404 		.ascii	"\004?\004\004\000\000p\210\374\0100\000\000\000\030"
 1536      00007088 
 1536      FC083000 
 1536      000018
 1537 004a 20FF211E 		.ascii	" \377!\036\000\000\360\010\360\000\340\030\000\000\000"
 1537      0000F008 
 1537      F000E018 
 1537      000000
 1538 0059 211C031E 		.ascii	"!\034\003\036!\036\000\000\360\010\210p\000\000\000"
 1538      211E0000 
 1538      F0088870 
 1538      000000
 1539 0068 1E212324 		.ascii	"\036!#$\031'!\020\020\026\016\000\000\000\000\000\000"
 1539      19272110 
 1539      10160E00 
 1539      00000000 
 1539      00
 1540 0079 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\340\030\004"
 1540      00000000 
 1540      0000E018 
 1540      04
 1541 0086 02000000 		.ascii	"\002\000\000\000\000\007\030 @\000\000\002\004\030\340"
 1541      00071820 
 1541      40000002 
 1541      0418E0
 1542 0095 00000000 		.ascii	"\000\000\000\000@ \030\007\000\000\000@@\200\360\200"
 1542      40201807 
 1542      00000040 
 1542      4080F080 
 1543 00a5 40400002 		.ascii	"@@\000\002\002\001\017\001\002\002\000\000\000\000\360"
 1543      02010F01 
 1543      02020000 
 1543      0000F0
 1544 00b4 00000000 		.ascii	"\000\000\000\000\001\001\001\037\001\001\001\000\000"
 1544      0101011F 
 1544      01010100 
 1544      00
 1545 00c1 00000000 		.ascii	"\000\000\000\000\000\000\000\200\260p\000\000\000\000"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 43


 1545      00000080 
 1545      B0700000 
 1545      0000
 1546 00cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\001\001\001"
 1546      00000000 
 1546      00000101 
 1546      01
 1547 00dc 01010101 		.ascii	"\001\001\001\001\000\000\000\000\000\000\000\000\000"
 1547      00000000 
 1547      00000000 
 1547      00
 1548 00e9 30300000 		.ascii	"00\000\000\000\000\000\000\000\000\000\200`\030\004"
 1548      00000000 
 1548      00000080 
 1548      601804
 1549 00f8 00601806 		.ascii	"\000`\030\006\001\000\000\000\000\340\020\010\010\020"
 1549      01000000 
 1549      00E01008 
 1549      0810
 1550 0106 E000000F 		.ascii	"\340\000\000\017\020  \020\017\000\000\020\020\370\000"
 1550      10202010 
 1550      0F000010 
 1550      10F800
 1551 0115 00000000 		.ascii	"\000\000\000\000  ?  \000\000\000p\010\010\010\210p"
 1551      20203F20 
 1551      20000000 
 1551      70080808 
 1551      8870
 1552 0127 00003028 		.ascii	"\000\0000($\"!0\000\0000\010\210\210H0\000\000\030 "
 1552      24222130 
 1552      00003008 
 1552      88884830 
 1552      00001820 
 1553 013b 2020110E 		.ascii	"  \021\016\000\000\000\300 \020\370\000\000\000\007"
 1553      000000C0 
 1553      2010F800 
 1553      000007
 1554 014a 0424243F 		.ascii	"\004$$?$\000\000\370\010\210\210\010\010\000\000\031"
 1554      240000F8 
 1554      08888808 
 1554      08000019 
 1555 015a 21202011 		.ascii	"!  \021\016\000\000\340\020\210\210\030\000\000\000"
 1555      0E0000E0 
 1555      10888818 
 1555      000000
 1556 0169 0F112020 		.ascii	"\017\021  \021\016\000\0008\010\010\3108\010\000\000"
 1556      110E0000 
 1556      380808C8 
 1556      38080000 
 1557 0179 00003F00 		.ascii	"\000\000?\000\000\000\000\000p\210\010\010\210p\000"
 1557      00000000 
 1557      70880808 
 1557      887000
 1558 0188 001C2221 		.ascii	"\000\034\"!!\"\034\000\000\340\020\010\010\020\340\000"
 1558      21221C00 
 1558      00E01008 
 1558      0810E000 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 44


 1559 0198 00003122 		.ascii	"\000\0001\"\"\021\017\000\000\000\000\300\300\000\000"
 1559      22110F00 
 1559      000000C0 
 1559      C00000
 1560 01a7 00000000 		.ascii	"\000\000\000\00000\000\000\000\000\000\000\200\000\000"
 1560      30300000 
 1560      00000000 
 1560      800000
 1561 01b6 00000000 		.ascii	"\000\000\000\000\200`\000\000\000\000\000\000\200@ "
 1561      80600000 
 1561      00000000 
 1561      804020
 1562 01c5 10080000 		.ascii	"\020\010\000\000\001\002\004\010\020 \000@@@@@@@\000"
 1562      01020408 
 1562      10200040 
 1562      40404040 
 1562      404000
 1563 01d8 04040404 		.ascii	"\004\004\004\004\004\004\004\000\000\010\020 @\200\000"
 1563      04040400 
 1563      00081020 
 1563      408000
 1564 01e7 00002010 		.ascii	"\000\000 \020\010\004\002\001\000\000pH\010\010\010"
 1564      08040201 
 1564      00007048 
 1564      080808
 1565 01f6 F0000000 		.ascii	"\360\000\000\000\00006\001\000\000\3000\310(\350\020"
 1565      00303601 
 1565      0000C030 
 1565      C828E810 
 1566 0206 E0000718 		.ascii	"\340\000\007\030'$#\024\013\000\000\000\3008\340\000"
 1566      27242314 
 1566      0B000000 
 1566      C038E000 
 1567 0216 0000203C 		.ascii	"\000\000 <#\002\002'8 \010\370\210\210\210p\000\000"
 1567      23020227 
 1567      382008F8 
 1567      88888870 
 1567      0000
 1568 0228 203F2020 		.ascii	" ?   \021\016\000\3000\010\010\010\0108\000\007\030"
 1568      20110E00 
 1568      C0300808 
 1568      08083800 
 1568      0718
 1569 023a 20202010 		.ascii	"   \020\010\000\010\370\010\010\010\020\340\000 ?  "
 1569      080008F8 
 1569      08080810 
 1569      E000203F 
 1569      2020
 1570 024c 20100F00 		.ascii	" \020\017\000\010\370\210\210\350\010\020\000 ?  # "
 1570      08F88888 
 1570      E8081000 
 1570      203F2020 
 1570      2320
 1571 025e 180008F8 		.ascii	"\030\000\010\370\210\210\350\010\020\000 ? \000\003"
 1571      8888E808 
 1571      1000203F 
 1571      200003
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 45


 1572 026d 000000C0 		.ascii	"\000\000\000\3000\010\010\0108\000\000\007\030  \"\036"
 1572      30080808 
 1572      38000007 
 1572      18202022 
 1572      1E
 1573 027e 020008F8 		.ascii	"\002\000\010\370\010\000\000\010\370\010 ?!\001\001"
 1573      08000008 
 1573      F808203F 
 1573      210101
 1574 028d 213F2000 		.ascii	"!? \000\010\010\370\010\010\000\000\000  ?  \000\000"
 1574      0808F808 
 1574      08000000 
 1574      20203F20 
 1574      200000
 1575 02a0 00000808 		.ascii	"\000\000\010\010\370\010\010\000\300\200\200\200\177"
 1575      F8080800 
 1575      C0808080 
 1575      7F
 1576 02ad 00000008 		.ascii	"\000\000\000\010\370\210\300(\030\010\000 ? \001&8 "
 1576      F888C028 
 1576      18080020 
 1576      3F200126 
 1576      3820
 1577 02bf 0008F808 		.ascii	"\000\010\370\010\000\000\000\000\000 ?    0\000\010"
 1577      00000000 
 1577      00203F20 
 1577      20202030 
 1577      0008
 1578 02d1 F8F800F8 		.ascii	"\370\370\000\370\370\010\000 ?\000?\000? \000\010\370"
 1578      F8080020 
 1578      3F003F00 
 1578      3F200008 
 1578      F8
 1579 02e2 30C00008 		.ascii	"0\300\000\010\370\010 ? \000\007\030?\000\340\020\010"
 1579      F808203F 
 1579      20000718 
 1579      3F00E010 
 1579      08
 1580 02f3 080810E0 		.ascii	"\010\010\020\340\000\017\020   \020\017\000\010\370"
 1580      000F1020 
 1580      2020100F 
 1580      0008F8
 1581 0302 08080808 		.ascii	"\010\010\010\010\360\000 ?!\001\001\001\000\000\340"
 1581      F000203F 
 1581      21010101 
 1581      0000E0
 1582 0311 10080808 		.ascii	"\020\010\010\010\020\340\000\017\030$$8PO\000\010\370"
 1582      10E0000F 
 1582      18242438 
 1582      504F0008 
 1582      F8
 1583 0322 88888888 		.ascii	"\210\210\210\210p\000 ? \000\003\0140 \000p\210\010"
 1583      7000203F 
 1583      2000030C 
 1583      30200070 
 1583      8808
 1584 0334 08083800 		.ascii	"\010\0108\000\0008 !!\"\034\000\030\010\010\370\010"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 46


 1584      00382021 
 1584      21221C00 
 1584      180808F8 
 1584      08
 1585 0345 08180000 		.ascii	"\010\030\000\000\000 ? \000\000\000\010\370\010\000"
 1585      00203F20 
 1585      00000008 
 1585      F80800
 1586 0354 0008F808 		.ascii	"\000\010\370\010\000\037    \037\000\010x\210\000\000"
 1586      001F2020 
 1586      20201F00 
 1586      08788800 
 1586      00
 1587 0365 C8380800 		.ascii	"\3108\010\000\000\0078\016\001\000\000\370\010\000\370"
 1587      0007380E 
 1587      010000F8 
 1587      0800F8
 1588 0374 0008F800 		.ascii	"\000\010\370\000\003<\007\000\007<\003\000\010\030h"
 1588      033C0700 
 1588      073C0300 
 1588      081868
 1589 0383 80806818 		.ascii	"\200\200h\030\010 0,\003\003,0 \0108\310\000\3108\010"
 1589      0820302C 
 1589      03032C30 
 1589      200838C8 
 1589      00C83808 
 1590 0397 00000020 		.ascii	"\000\000\000 ? \000\000\000\020\010\010\010\3108\010"
 1590      3F200000 
 1590      00100808 
 1590      08C83808 
 1591 03a7 00203826 		.ascii	"\000 8&!  \030\000\000\000\000\376\002\002\002\000\000"
 1591      21202018 
 1591      00000000 
 1591      FE020202 
 1591      0000
 1592 03b9 00007F40 		.ascii	"\000\000\177@@@\000\000\0140\300\000\000\000\000\000"
 1592      40400000 
 1592      0C30C000 
 1592      00000000 
 1593 03c9 00000106 		.ascii	"\000\000\001\0068\300\000\000\002\002\002\376\000\000"
 1593      38C00000 
 1593      020202FE 
 1593      0000
 1594 03d7 00004040 		.ascii	"\000\000@@@\177\000\000\000\000\000\004\002\002\002"
 1594      407F0000 
 1594      00000004 
 1594      020202
 1595 03e6 04000000 		.ascii	"\004\000\000\000\000\000\000\000\000\000\000\000\000"
 1595      00000000 
 1595      00000000 
 1595      00
 1596 03f3 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\200\200\200\200"
 1596      00808080 
 1596      80808080 
 1596      80
 1597 0400 00020204 		.ascii	"\000\002\002\004\000\000\000\000\000\000\000\000\000"
 1597      00000000 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 47


 1597      00000000 
 1597      00
 1598 040d 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\000\000\000\031"
 1598      00808080 
 1598      80000000 
 1598      19
 1599 041a 24222222 		.ascii	"$\"\"\"? \010\370\000\200\200\000\000\000\000?\021 "
 1599      3F2008F8 
 1599      00808000 
 1599      0000003F 
 1599      1120
 1600 042c 20110E00 		.ascii	" \021\016\000\000\000\000\200\200\200\000\000\000\016"
 1600      00000080 
 1600      80800000 
 1600      000E
 1601 043a 11202020 		.ascii	"\021   \021\000\000\000\000\200\200\210\370\000\000"
 1601      11000000 
 1601      00808088 
 1601      F80000
 1602 0449 0E112020 		.ascii	"\016\021  \020? \000\000\200\200\200\200\000\000\000"
 1602      103F2000 
 1602      00808080 
 1602      80000000 
 1603 0459 1F222222 		.ascii	"\037\"\"\"\"\023\000\000\200\200\360\210\210\210\030"
 1603      22130000 
 1603      8080F088 
 1603      888818
 1604 0468 0020203F 		.ascii	"\000  ?  \000\000\000\000\200\200\200\200\200\000\000"
 1604      20200000 
 1604      00008080 
 1604      80808000 
 1604      00
 1605 0479 6B949494 		.ascii	"k\224\224\224\223`\000\010\370\000\200\200\200\000\000"
 1605      93600008 
 1605      F8008080 
 1605      800000
 1606 0488 203F2100 		.ascii	" ?!\000\000 ? \000\200\230\230\000\000\000\000\000 "
 1606      00203F20 
 1606      00809898 
 1606      00000000 
 1606      0020
 1607 049a 203F2020 		.ascii	" ?  \000\000\000\000\000\200\230\230\000\000\000\300"
 1607      00000000 
 1607      00809898 
 1607      000000C0 
 1608 04aa 8080807F 		.ascii	"\200\200\200\177\000\000\010\370\000\000\200\200\200"
 1608      000008F8 
 1608      00008080 
 1608      80
 1609 04b7 00203F24 		.ascii	"\000 ?$\002-0 \000\000\010\010\370\000\000\000\000\000"
 1609      022D3020 
 1609      00000808 
 1609      F8000000 
 1609      0000
 1610 04c9 20203F20 		.ascii	"  ?  \000\000\200\200\200\200\200\200\200\000 ? \000"
 1610      20000080 
 1610      80808080 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 48


 1610      80800020 
 1610      3F2000
 1611 04dc 3F20003F 		.ascii	"? \000?\200\200\000\200\200\200\000\000 ?!\000\000 "
 1611      80800080 
 1611      80800000 
 1611      203F2100 
 1611      0020
 1612 04ee 3F200000 		.ascii	"? \000\000\200\200\200\200\000\000\000\037    \037\000"
 1612      80808080 
 1612      0000001F 
 1612      20202020 
 1612      1F00
 1613 0500 80800080 		.ascii	"\200\200\000\200\200\000\000\000\200\377\241  \021\016"
 1613      80000000 
 1613      80FFA120 
 1613      20110E
 1614 050f 00000000 		.ascii	"\000\000\000\000\200\200\200\200\000\000\016\021  \240"
 1614      80808080 
 1614      00000E11 
 1614      2020A0
 1615 051e FF808080 		.ascii	"\377\200\200\200\200\000\200\200\200\000  ?! \000\001"
 1615      80008080 
 1615      80002020 
 1615      3F212000 
 1615      01
 1616 052f 00000080 		.ascii	"\000\000\000\200\200\200\200\200\000\0003$$$$\031\000"
 1616      80808080 
 1616      00003324 
 1616      24242419 
 1616      00
 1617 0540 008080E0 		.ascii	"\000\200\200\340\200\200\000\000\000\000\000\037  \000"
 1617      80800000 
 1617      0000001F 
 1617      202000
 1618 054f 00808000 		.ascii	"\000\200\200\000\000\000\200\200\000\000\037   \020"
 1618      00008080 
 1618      00001F20 
 1618      202010
 1619 055e 3F208080 		.ascii	"? \200\200\200\000\000\200\200\200\000\001\0160\010"
 1619      80000080 
 1619      80800001 
 1619      0E3008
 1620 056d 06010080 		.ascii	"\006\001\000\200\200\000\200\000\200\200\200\0170\014"
 1620      80008000 
 1620      8080800F 
 1620      300C
 1621 057b 030C300F 		.ascii	"\003\0140\017\000\000\200\200\000\200\200\200\000\000"
 1621      00008080 
 1621      00808080 
 1621      0000
 1622 0589 20312E0E 		.ascii	" 1.\0161 \000\200\200\200\000\000\200\200\200\200\201"
 1622      31200080 
 1622      80800000 
 1622      80808080 
 1622      81
 1623 059a 8E701806 		.ascii	"\216p\030\006\001\000\000\200\200\200\200\200\200\000"
 1623      01000080 
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 49


 1623      80808080 
 1623      8000
 1624 05a8 0021302C 		.ascii	"\000!0,\"!0\000\000\000\000\000\200|\002\002\000\000"
 1624      22213000 
 1624      00000000 
 1624      807C0202 
 1624      0000
 1625 05ba 0000003F 		.ascii	"\000\000\000?@@\000\000\000\000\377\000\000\000\000"
 1625      40400000 
 1625      0000FF00 
 1625      000000
 1626 05c9 000000FF 		.ascii	"\000\000\000\377\000\000\000\000\002\002|\200\000\000"
 1626      00000000 
 1626      02027C80 
 1626      0000
 1627 05d7 00004040 		.ascii	"\000\000@@?\000\000\000\000\000\006\001\001\002\002"
 1627      3F000000 
 1627      00000601 
 1627      010202
 1628 05e6 04040000 		.ascii	"\004\004\000\000\000\000\000\000\000\000"
 1628      00000000 
 1628      0000
 1629              		.text
 1630              	.Letext0:
 1631              		.file 2 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_defa
 1632              		.file 3 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h
 1633              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1634              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1635              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1636              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1637              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1638              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1639              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1640              		.file 11 "Inc/i2c.h"
 1641              		.file 12 "Inc/ascii.h"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 oleds.c
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:18     .text.WriteCmd:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:26     .text.WriteCmd:00000000 WriteCmd
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:66     .text.WriteCmd:00000028 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:71     .text.WriteDat:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:78     .text.WriteDat:00000000 WriteDat
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:117    .text.WriteDat:00000028 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:122    .text.OLED_Init:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:129    .text.OLED_Init:00000000 OLED_Init
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:262    .text.OLED_SetPos:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:269    .text.OLED_SetPos:00000000 OLED_SetPos
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:310    .text.OLED_Fill:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:317    .text.OLED_Fill:00000000 OLED_Fill
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:398    .text.OLED_CLS:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:405    .text.OLED_CLS:00000000 OLED_CLS
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:426    .text.OLED_ON:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:433    .text.OLED_ON:00000000 OLED_ON
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:462    .text.OLED_OFF:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:469    .text.OLED_OFF:00000000 OLED_OFF
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:498    .text.OLED_ShowStr:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:505    .text.OLED_ShowStr:00000000 OLED_ShowStr
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:736    .text.OLED_ShowStr:000000d0 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:742    .text.OLED_ShowCN:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:749    .text.OLED_ShowCN:00000000 OLED_ShowCN
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:846    .text.OLED_ShowCN:00000044 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:851    .text.OLED_DrawBMP:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:858    .text.OLED_DrawBMP:00000000 OLED_DrawBMP
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:947    .text.OLED_ShowChar:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:954    .text.OLED_ShowChar:00000000 OLED_ShowChar
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1110   .text.OLED_ShowChar:00000088 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1116   .text.oled_pow:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1123   .text.oled_pow:00000000 oled_pow
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1161   .text.OLED_ShowNum:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1168   .text.OLED_ShowNum:00000000 OLED_ShowNum
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1298   .text.OLED_ShowNum:00000090 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1310   .data.BMP1:00000000 BMP1
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1531   .rodata.F8X16:00000000 F8X16
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1433   .rodata.F6x8:00000000 F6x8
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1391   .data.F16x16:00000000 F16x16
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1307   .data.BMP1:00000000 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1387   .data.F16x16:00000000 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1429   .rodata.F6x8:00000000 $d
D:\Tools\STM32-VScode\msys2\tmp\ccsfcSHa.s:1527   .rodata.F8X16:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c1
HAL_Delay
