ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_RTC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_RTC_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_RTC_Init:
  27              	.LFB130:
  28              		.file 1 "Src/rtc.c"
   1:Src/rtc.c     **** /**
   2:Src/rtc.c     ****   ******************************************************************************
   3:Src/rtc.c     ****   * File Name          : RTC.c
   4:Src/rtc.c     ****   * Description        : This file provides code for the configuration
   5:Src/rtc.c     ****   *                      of the RTC instances.
   6:Src/rtc.c     ****   ******************************************************************************
   7:Src/rtc.c     ****   * @attention
   8:Src/rtc.c     ****   *
   9:Src/rtc.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/rtc.c     ****   * All rights reserved.</center></h2>
  11:Src/rtc.c     ****   *
  12:Src/rtc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/rtc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/rtc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/rtc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/rtc.c     ****   *
  17:Src/rtc.c     ****   ******************************************************************************
  18:Src/rtc.c     ****   */
  19:Src/rtc.c     **** 
  20:Src/rtc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/rtc.c     **** #include "rtc.h"
  22:Src/rtc.c     **** 
  23:Src/rtc.c     **** /* USER CODE BEGIN 0 */
  24:Src/rtc.c     **** 
  25:Src/rtc.c     **** /* USER CODE END 0 */
  26:Src/rtc.c     **** 
  27:Src/rtc.c     **** RTC_HandleTypeDef hrtc;
  28:Src/rtc.c     **** 
  29:Src/rtc.c     **** /* RTC init function */
  30:Src/rtc.c     **** void MX_RTC_Init(void)
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 2


  31:Src/rtc.c     **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 64
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 90B0     		sub	sp, sp, #64
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 72
  32:Src/rtc.c     ****   RTC_TimeTypeDef sTime = {0};
  41              		.loc 1 32 3 view .LVU1
  42              		.loc 1 32 19 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0B94     		str	r4, [sp, #44]
  45 0008 0C94     		str	r4, [sp, #48]
  46 000a 0D94     		str	r4, [sp, #52]
  47 000c 0E94     		str	r4, [sp, #56]
  48 000e 0F94     		str	r4, [sp, #60]
  33:Src/rtc.c     ****   RTC_DateTypeDef sDate = {0};
  49              		.loc 1 33 3 is_stmt 1 view .LVU3
  50              		.loc 1 33 19 is_stmt 0 view .LVU4
  51 0010 0A94     		str	r4, [sp, #40]
  34:Src/rtc.c     ****   RTC_AlarmTypeDef sAlarm = {0};
  52              		.loc 1 34 3 is_stmt 1 view .LVU5
  53              		.loc 1 34 20 is_stmt 0 view .LVU6
  54 0012 2822     		movs	r2, #40
  55 0014 2146     		mov	r1, r4
  56 0016 6846     		mov	r0, sp
  57 0018 FFF7FEFF 		bl	memset
  58              	.LVL0:
  35:Src/rtc.c     **** 
  36:Src/rtc.c     ****   /** Initialize RTC Only 
  37:Src/rtc.c     ****   */
  38:Src/rtc.c     ****   hrtc.Instance = RTC;
  59              		.loc 1 38 3 is_stmt 1 view .LVU7
  60              		.loc 1 38 17 is_stmt 0 view .LVU8
  61 001c 3348     		ldr	r0, .L13
  62 001e 344B     		ldr	r3, .L13+4
  63 0020 0360     		str	r3, [r0]
  39:Src/rtc.c     ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
  64              		.loc 1 39 3 is_stmt 1 view .LVU9
  65              		.loc 1 39 24 is_stmt 0 view .LVU10
  66 0022 4460     		str	r4, [r0, #4]
  40:Src/rtc.c     ****   hrtc.Init.AsynchPrediv = 127;
  67              		.loc 1 40 3 is_stmt 1 view .LVU11
  68              		.loc 1 40 26 is_stmt 0 view .LVU12
  69 0024 7F23     		movs	r3, #127
  70 0026 8360     		str	r3, [r0, #8]
  41:Src/rtc.c     ****   hrtc.Init.SynchPrediv = 255;
  71              		.loc 1 41 3 is_stmt 1 view .LVU13
  72              		.loc 1 41 25 is_stmt 0 view .LVU14
  73 0028 FF23     		movs	r3, #255
  74 002a C360     		str	r3, [r0, #12]
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 3


  42:Src/rtc.c     ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
  75              		.loc 1 42 3 is_stmt 1 view .LVU15
  76              		.loc 1 42 20 is_stmt 0 view .LVU16
  77 002c 0461     		str	r4, [r0, #16]
  43:Src/rtc.c     ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
  78              		.loc 1 43 3 is_stmt 1 view .LVU17
  79              		.loc 1 43 28 is_stmt 0 view .LVU18
  80 002e 4461     		str	r4, [r0, #20]
  44:Src/rtc.c     ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
  81              		.loc 1 44 3 is_stmt 1 view .LVU19
  82              		.loc 1 44 24 is_stmt 0 view .LVU20
  83 0030 8461     		str	r4, [r0, #24]
  45:Src/rtc.c     ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
  84              		.loc 1 45 3 is_stmt 1 view .LVU21
  85              		.loc 1 45 7 is_stmt 0 view .LVU22
  86 0032 FFF7FEFF 		bl	HAL_RTC_Init
  87              	.LVL1:
  88              		.loc 1 45 6 view .LVU23
  89 0036 0028     		cmp	r0, #0
  90 0038 48D1     		bne	.L8
  91              	.L2:
  46:Src/rtc.c     ****   {
  47:Src/rtc.c     ****     Error_Handler();
  48:Src/rtc.c     ****   }
  49:Src/rtc.c     **** 
  50:Src/rtc.c     ****   /* USER CODE BEGIN Check_RTC_BKUP */
  51:Src/rtc.c     ****     
  52:Src/rtc.c     ****   /* USER CODE END Check_RTC_BKUP */
  53:Src/rtc.c     **** 
  54:Src/rtc.c     ****   /** Initialize RTC and set the Time and Date 
  55:Src/rtc.c     ****   */
  56:Src/rtc.c     ****   sTime.Hours = 0x14;
  92              		.loc 1 56 3 is_stmt 1 view .LVU24
  93              		.loc 1 56 15 is_stmt 0 view .LVU25
  94 003a 1423     		movs	r3, #20
  95 003c 8DF82C30 		strb	r3, [sp, #44]
  57:Src/rtc.c     ****   sTime.Minutes = 0x40;
  96              		.loc 1 57 3 is_stmt 1 view .LVU26
  97              		.loc 1 57 17 is_stmt 0 view .LVU27
  98 0040 4023     		movs	r3, #64
  99 0042 8DF82D30 		strb	r3, [sp, #45]
  58:Src/rtc.c     ****   sTime.Seconds = 0x0;
 100              		.loc 1 58 3 is_stmt 1 view .LVU28
 101              		.loc 1 58 17 is_stmt 0 view .LVU29
 102 0046 0023     		movs	r3, #0
 103 0048 8DF82E30 		strb	r3, [sp, #46]
  59:Src/rtc.c     ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 104              		.loc 1 59 3 is_stmt 1 view .LVU30
 105              		.loc 1 59 24 is_stmt 0 view .LVU31
 106 004c 0E93     		str	r3, [sp, #56]
  60:Src/rtc.c     ****   sTime.StoreOperation = RTC_STOREOPERATION_SET;
 107              		.loc 1 60 3 is_stmt 1 view .LVU32
 108              		.loc 1 60 24 is_stmt 0 view .LVU33
 109 004e 4FF48023 		mov	r3, #262144
 110 0052 0F93     		str	r3, [sp, #60]
  61:Src/rtc.c     ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 111              		.loc 1 61 3 is_stmt 1 view .LVU34
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 4


 112              		.loc 1 61 7 is_stmt 0 view .LVU35
 113 0054 0122     		movs	r2, #1
 114 0056 0BA9     		add	r1, sp, #44
 115 0058 2448     		ldr	r0, .L13
 116 005a FFF7FEFF 		bl	HAL_RTC_SetTime
 117              	.LVL2:
 118              		.loc 1 61 6 view .LVU36
 119 005e 0028     		cmp	r0, #0
 120 0060 37D1     		bne	.L9
 121              	.L3:
  62:Src/rtc.c     ****   {
  63:Src/rtc.c     ****     Error_Handler();
  64:Src/rtc.c     ****   }
  65:Src/rtc.c     ****   sDate.WeekDay = RTC_WEEKDAY_THURSDAY;
 122              		.loc 1 65 3 is_stmt 1 view .LVU37
 123              		.loc 1 65 17 is_stmt 0 view .LVU38
 124 0062 0423     		movs	r3, #4
 125 0064 8DF82830 		strb	r3, [sp, #40]
  66:Src/rtc.c     ****   sDate.Month = RTC_MONTH_FEBRUARY;
 126              		.loc 1 66 3 is_stmt 1 view .LVU39
 127              		.loc 1 66 15 is_stmt 0 view .LVU40
 128 0068 0223     		movs	r3, #2
 129 006a 8DF82930 		strb	r3, [sp, #41]
  67:Src/rtc.c     ****   sDate.Date = 0x27;
 130              		.loc 1 67 3 is_stmt 1 view .LVU41
 131              		.loc 1 67 14 is_stmt 0 view .LVU42
 132 006e 2723     		movs	r3, #39
 133 0070 8DF82A30 		strb	r3, [sp, #42]
  68:Src/rtc.c     ****   sDate.Year = 0x20;
 134              		.loc 1 68 3 is_stmt 1 view .LVU43
 135              		.loc 1 68 14 is_stmt 0 view .LVU44
 136 0074 2023     		movs	r3, #32
 137 0076 8DF82B30 		strb	r3, [sp, #43]
  69:Src/rtc.c     **** 
  70:Src/rtc.c     ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 138              		.loc 1 70 3 is_stmt 1 view .LVU45
 139              		.loc 1 70 7 is_stmt 0 view .LVU46
 140 007a 0122     		movs	r2, #1
 141 007c 0AA9     		add	r1, sp, #40
 142 007e 1B48     		ldr	r0, .L13
 143 0080 FFF7FEFF 		bl	HAL_RTC_SetDate
 144              	.LVL3:
 145              		.loc 1 70 6 view .LVU47
 146 0084 40BB     		cbnz	r0, .L10
 147              	.L4:
  71:Src/rtc.c     ****   {
  72:Src/rtc.c     ****     Error_Handler();
  73:Src/rtc.c     ****   }
  74:Src/rtc.c     ****   /** Enable the Alarm A 
  75:Src/rtc.c     ****   */
  76:Src/rtc.c     ****   sAlarm.AlarmTime.Hours = 0x0;
 148              		.loc 1 76 3 is_stmt 1 view .LVU48
 149              		.loc 1 76 26 is_stmt 0 view .LVU49
 150 0086 0023     		movs	r3, #0
 151 0088 8DF80030 		strb	r3, [sp]
  77:Src/rtc.c     ****   sAlarm.AlarmTime.Minutes = 0x0;
 152              		.loc 1 77 3 is_stmt 1 view .LVU50
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 5


 153              		.loc 1 77 28 is_stmt 0 view .LVU51
 154 008c 8DF80130 		strb	r3, [sp, #1]
  78:Src/rtc.c     ****   sAlarm.AlarmTime.Seconds = 0x10;
 155              		.loc 1 78 3 is_stmt 1 view .LVU52
 156              		.loc 1 78 28 is_stmt 0 view .LVU53
 157 0090 1022     		movs	r2, #16
 158 0092 8DF80220 		strb	r2, [sp, #2]
  79:Src/rtc.c     ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 159              		.loc 1 79 3 is_stmt 1 view .LVU54
 160              		.loc 1 79 31 is_stmt 0 view .LVU55
 161 0096 0193     		str	r3, [sp, #4]
  80:Src/rtc.c     ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 162              		.loc 1 80 3 is_stmt 1 view .LVU56
 163              		.loc 1 80 35 is_stmt 0 view .LVU57
 164 0098 0393     		str	r3, [sp, #12]
  81:Src/rtc.c     ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_SET;
 165              		.loc 1 81 3 is_stmt 1 view .LVU58
 166              		.loc 1 81 35 is_stmt 0 view .LVU59
 167 009a 4FF48022 		mov	r2, #262144
 168 009e 0492     		str	r2, [sp, #16]
  82:Src/rtc.c     ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 169              		.loc 1 82 3 is_stmt 1 view .LVU60
 170              		.loc 1 82 20 is_stmt 0 view .LVU61
 171 00a0 0593     		str	r3, [sp, #20]
  83:Src/rtc.c     ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 172              		.loc 1 83 3 is_stmt 1 view .LVU62
 173              		.loc 1 83 29 is_stmt 0 view .LVU63
 174 00a2 0693     		str	r3, [sp, #24]
  84:Src/rtc.c     ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 175              		.loc 1 84 3 is_stmt 1 view .LVU64
 176              		.loc 1 84 30 is_stmt 0 view .LVU65
 177 00a4 0793     		str	r3, [sp, #28]
  85:Src/rtc.c     ****   sAlarm.AlarmDateWeekDay = 0x1;
 178              		.loc 1 85 3 is_stmt 1 view .LVU66
 179              		.loc 1 85 27 is_stmt 0 view .LVU67
 180 00a6 0122     		movs	r2, #1
 181 00a8 8DF82020 		strb	r2, [sp, #32]
  86:Src/rtc.c     ****   sAlarm.Alarm = RTC_ALARM_A;
 182              		.loc 1 86 3 is_stmt 1 view .LVU68
 183              		.loc 1 86 16 is_stmt 0 view .LVU69
 184 00ac 4FF48073 		mov	r3, #256
 185 00b0 0993     		str	r3, [sp, #36]
  87:Src/rtc.c     ****   if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 186              		.loc 1 87 3 is_stmt 1 view .LVU70
 187              		.loc 1 87 7 is_stmt 0 view .LVU71
 188 00b2 6946     		mov	r1, sp
 189 00b4 0D48     		ldr	r0, .L13
 190 00b6 FFF7FEFF 		bl	HAL_RTC_SetAlarm_IT
 191              	.LVL4:
 192              		.loc 1 87 6 view .LVU72
 193 00ba 80B9     		cbnz	r0, .L11
 194              	.L5:
  88:Src/rtc.c     ****   {
  89:Src/rtc.c     ****     Error_Handler();
  90:Src/rtc.c     ****   }
  91:Src/rtc.c     ****   /** Enable the WakeUp 
  92:Src/rtc.c     ****   */
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 6


  93:Src/rtc.c     ****   if (HAL_RTCEx_SetWakeUpTimer(&hrtc, 0, RTC_WAKEUPCLOCK_RTCCLK_DIV16) != HAL_OK)
 195              		.loc 1 93 3 is_stmt 1 view .LVU73
 196              		.loc 1 93 7 is_stmt 0 view .LVU74
 197 00bc 0022     		movs	r2, #0
 198 00be 1146     		mov	r1, r2
 199 00c0 0A48     		ldr	r0, .L13
 200 00c2 FFF7FEFF 		bl	HAL_RTCEx_SetWakeUpTimer
 201              	.LVL5:
 202              		.loc 1 93 6 view .LVU75
 203 00c6 68B9     		cbnz	r0, .L12
 204              	.L1:
  94:Src/rtc.c     ****   {
  95:Src/rtc.c     ****     Error_Handler();
  96:Src/rtc.c     ****   }
  97:Src/rtc.c     **** 
  98:Src/rtc.c     **** }
 205              		.loc 1 98 1 view .LVU76
 206 00c8 10B0     		add	sp, sp, #64
 207              	.LCFI2:
 208              		.cfi_remember_state
 209              		.cfi_def_cfa_offset 8
 210              		@ sp needed
 211 00ca 10BD     		pop	{r4, pc}
 212              	.L8:
 213              	.LCFI3:
 214              		.cfi_restore_state
  47:Src/rtc.c     ****   }
 215              		.loc 1 47 5 is_stmt 1 view .LVU77
 216 00cc FFF7FEFF 		bl	Error_Handler
 217              	.LVL6:
 218 00d0 B3E7     		b	.L2
 219              	.L9:
  63:Src/rtc.c     ****   }
 220              		.loc 1 63 5 view .LVU78
 221 00d2 FFF7FEFF 		bl	Error_Handler
 222              	.LVL7:
 223 00d6 C4E7     		b	.L3
 224              	.L10:
  72:Src/rtc.c     ****   }
 225              		.loc 1 72 5 view .LVU79
 226 00d8 FFF7FEFF 		bl	Error_Handler
 227              	.LVL8:
 228 00dc D3E7     		b	.L4
 229              	.L11:
  89:Src/rtc.c     ****   }
 230              		.loc 1 89 5 view .LVU80
 231 00de FFF7FEFF 		bl	Error_Handler
 232              	.LVL9:
 233 00e2 EBE7     		b	.L5
 234              	.L12:
  95:Src/rtc.c     ****   }
 235              		.loc 1 95 5 view .LVU81
 236 00e4 FFF7FEFF 		bl	Error_Handler
 237              	.LVL10:
 238              		.loc 1 98 1 is_stmt 0 view .LVU82
 239 00e8 EEE7     		b	.L1
 240              	.L14:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 7


 241 00ea 00BF     		.align	2
 242              	.L13:
 243 00ec 00000000 		.word	hrtc
 244 00f0 00280040 		.word	1073752064
 245              		.cfi_endproc
 246              	.LFE130:
 248              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 249              		.align	1
 250              		.global	HAL_RTC_MspInit
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv4-sp-d16
 256              	HAL_RTC_MspInit:
 257              	.LVL11:
 258              	.LFB131:
  99:Src/rtc.c     **** 
 100:Src/rtc.c     **** void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
 101:Src/rtc.c     **** {
 259              		.loc 1 101 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		.loc 1 101 1 is_stmt 0 view .LVU84
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI4:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 102:Src/rtc.c     **** 
 103:Src/rtc.c     ****   if(rtcHandle->Instance==RTC)
 269              		.loc 1 103 3 is_stmt 1 view .LVU85
 270              		.loc 1 103 15 is_stmt 0 view .LVU86
 271 0002 0268     		ldr	r2, [r0]
 272              		.loc 1 103 5 view .LVU87
 273 0004 074B     		ldr	r3, .L19
 274 0006 9A42     		cmp	r2, r3
 275 0008 00D0     		beq	.L18
 276              	.LVL12:
 277              	.L15:
 104:Src/rtc.c     ****   {
 105:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspInit 0 */
 106:Src/rtc.c     **** 
 107:Src/rtc.c     ****   /* USER CODE END RTC_MspInit 0 */
 108:Src/rtc.c     ****     /* RTC clock enable */
 109:Src/rtc.c     ****     __HAL_RCC_RTC_ENABLE();
 110:Src/rtc.c     **** 
 111:Src/rtc.c     ****     /* RTC interrupt Init */
 112:Src/rtc.c     ****     HAL_NVIC_SetPriority(RTC_Alarm_IRQn, 0, 0);
 113:Src/rtc.c     ****     HAL_NVIC_EnableIRQ(RTC_Alarm_IRQn);
 114:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspInit 1 */
 115:Src/rtc.c     **** 
 116:Src/rtc.c     ****   /* USER CODE END RTC_MspInit 1 */
 117:Src/rtc.c     ****   }
 118:Src/rtc.c     **** }
 278              		.loc 1 118 1 view .LVU88
 279 000a 08BD     		pop	{r3, pc}
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 8


 280              	.LVL13:
 281              	.L18:
 109:Src/rtc.c     **** 
 282              		.loc 1 109 5 is_stmt 1 view .LVU89
 283 000c 064B     		ldr	r3, .L19+4
 284 000e 0122     		movs	r2, #1
 285 0010 1A60     		str	r2, [r3]
 112:Src/rtc.c     ****     HAL_NVIC_EnableIRQ(RTC_Alarm_IRQn);
 286              		.loc 1 112 5 view .LVU90
 287 0012 0022     		movs	r2, #0
 288 0014 1146     		mov	r1, r2
 289 0016 2920     		movs	r0, #41
 290              	.LVL14:
 112:Src/rtc.c     ****     HAL_NVIC_EnableIRQ(RTC_Alarm_IRQn);
 291              		.loc 1 112 5 is_stmt 0 view .LVU91
 292 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 293              	.LVL15:
 113:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspInit 1 */
 294              		.loc 1 113 5 is_stmt 1 view .LVU92
 295 001c 2920     		movs	r0, #41
 296 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 297              	.LVL16:
 298              		.loc 1 118 1 is_stmt 0 view .LVU93
 299 0022 F2E7     		b	.L15
 300              	.L20:
 301              		.align	2
 302              	.L19:
 303 0024 00280040 		.word	1073752064
 304 0028 3C0E4742 		.word	1111952956
 305              		.cfi_endproc
 306              	.LFE131:
 308              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 309              		.align	1
 310              		.global	HAL_RTC_MspDeInit
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv4-sp-d16
 316              	HAL_RTC_MspDeInit:
 317              	.LVL17:
 318              	.LFB132:
 119:Src/rtc.c     **** 
 120:Src/rtc.c     **** void HAL_RTC_MspDeInit(RTC_HandleTypeDef* rtcHandle)
 121:Src/rtc.c     **** {
 319              		.loc 1 121 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		.loc 1 121 1 is_stmt 0 view .LVU95
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI5:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 122:Src/rtc.c     **** 
 123:Src/rtc.c     ****   if(rtcHandle->Instance==RTC)
 329              		.loc 1 123 3 is_stmt 1 view .LVU96
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 9


 330              		.loc 1 123 15 is_stmt 0 view .LVU97
 331 0002 0268     		ldr	r2, [r0]
 332              		.loc 1 123 5 view .LVU98
 333 0004 054B     		ldr	r3, .L25
 334 0006 9A42     		cmp	r2, r3
 335 0008 00D0     		beq	.L24
 336              	.LVL18:
 337              	.L21:
 124:Src/rtc.c     ****   {
 125:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspDeInit 0 */
 126:Src/rtc.c     **** 
 127:Src/rtc.c     ****   /* USER CODE END RTC_MspDeInit 0 */
 128:Src/rtc.c     ****     /* Peripheral clock disable */
 129:Src/rtc.c     ****     __HAL_RCC_RTC_DISABLE();
 130:Src/rtc.c     **** 
 131:Src/rtc.c     ****     /* RTC interrupt Deinit */
 132:Src/rtc.c     ****     HAL_NVIC_DisableIRQ(RTC_Alarm_IRQn);
 133:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 134:Src/rtc.c     **** 
 135:Src/rtc.c     ****   /* USER CODE END RTC_MspDeInit 1 */
 136:Src/rtc.c     ****   }
 137:Src/rtc.c     **** } 
 338              		.loc 1 137 1 view .LVU99
 339 000a 08BD     		pop	{r3, pc}
 340              	.LVL19:
 341              	.L24:
 129:Src/rtc.c     **** 
 342              		.loc 1 129 5 is_stmt 1 view .LVU100
 343 000c 044B     		ldr	r3, .L25+4
 344 000e 0022     		movs	r2, #0
 345 0010 1A60     		str	r2, [r3]
 132:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 346              		.loc 1 132 5 view .LVU101
 347 0012 2920     		movs	r0, #41
 348              	.LVL20:
 132:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 349              		.loc 1 132 5 is_stmt 0 view .LVU102
 350 0014 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 351              	.LVL21:
 352              		.loc 1 137 1 view .LVU103
 353 0018 F7E7     		b	.L21
 354              	.L26:
 355 001a 00BF     		.align	2
 356              	.L25:
 357 001c 00280040 		.word	1073752064
 358 0020 3C0E4742 		.word	1111952956
 359              		.cfi_endproc
 360              	.LFE132:
 362              		.comm	hrtc,32,4
 363              		.text
 364              	.Letext0:
 365              		.file 2 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_defa
 366              		.file 3 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h
 367              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 368              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 369              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 370              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 10


 371              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 372              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 373              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 374              		.file 11 "Inc/rtc.h"
 375              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 376              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc_ex.h"
 377              		.file 14 "Inc/main.h"
 378              		.file 15 "<built-in>"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 rtc.c
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:18     .text.MX_RTC_Init:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:26     .text.MX_RTC_Init:00000000 MX_RTC_Init
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:243    .text.MX_RTC_Init:000000ec $d
                            *COM*:00000020 hrtc
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:249    .text.HAL_RTC_MspInit:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:256    .text.HAL_RTC_MspInit:00000000 HAL_RTC_MspInit
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:303    .text.HAL_RTC_MspInit:00000024 $d
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:309    .text.HAL_RTC_MspDeInit:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:316    .text.HAL_RTC_MspDeInit:00000000 HAL_RTC_MspDeInit
D:\Tools\STM32-VScode\msys2\tmp\ccdHQjbz.s:357    .text.HAL_RTC_MspDeInit:0000001c $d

UNDEFINED SYMBOLS
memset
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm_IT
HAL_RTCEx_SetWakeUpTimer
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
