ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB134:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "gpio.h"
  24:Src/main.c    **** #include "fsmc.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include "lcd.h"
  29:Src/main.c    **** #include "stdio.h"
  30:Src/main.c    **** /* USER CODE END Includes */
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /**
  64:Src/main.c    ****   * @brief  The application entry point.
  65:Src/main.c    ****   * @retval int
  66:Src/main.c    ****   */
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    ****   uint8_t x = 0;
  71:Src/main.c    ****   uint8_t lcd_id[12];
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    ****   
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Src/main.c    ****   HAL_Init();
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE BEGIN Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE END Init */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Configure the system clock */
  85:Src/main.c    ****   SystemClock_Config();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 3


  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END SysInit */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Initialize all configured peripherals */
  92:Src/main.c    ****   MX_GPIO_Init();
  93:Src/main.c    ****   MX_FSMC_Init();
  94:Src/main.c    ****   /* USER CODE BEGIN 2 */
  95:Src/main.c    ****   LCD_Init();
  96:Src/main.c    ****   POINT_COLOR = RED;
  97:Src/main.c    ****   sprintf((char *)lcd_id,"LCD ID:%04X",lcddev.id);
  98:Src/main.c    ****   /* USER CODE END 2 */
  99:Src/main.c    ****  
 100:Src/main.c    ****  
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Infinite loop */
 103:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 104:Src/main.c    ****   while (1)
 105:Src/main.c    ****   {
 106:Src/main.c    ****     switch (x)
 107:Src/main.c    ****     {
 108:Src/main.c    ****     case 0:LCD_Clear(WHITE);break;
 109:Src/main.c    ****     case 1:LCD_Clear(BLACK);break;
 110:Src/main.c    **** 		case 2:LCD_Clear(BLUE);break;
 111:Src/main.c    **** 		case 3:LCD_Clear(RED);break;
 112:Src/main.c    **** 		case 4:LCD_Clear(MAGENTA);break;
 113:Src/main.c    **** 		case 5:LCD_Clear(GREEN);break;
 114:Src/main.c    **** 		case 6:LCD_Clear(CYAN);break; 
 115:Src/main.c    **** 		case 7:LCD_Clear(YELLOW);break;
 116:Src/main.c    **** 		case 8:LCD_Clear(BRRED);break;
 117:Src/main.c    **** 		case 9:LCD_Clear(GRAY);break;
 118:Src/main.c    **** 		case 10:LCD_Clear(LGRAY);break;
 119:Src/main.c    **** 		case 11:LCD_Clear(BROWN);break;
 120:Src/main.c    ****     }
 121:Src/main.c    ****     POINT_COLOR = RED;
 122:Src/main.c    ****     LCD_ShowString(10,40,240,32,32,(uint8_t *)"Apollo STM32F4/F7"); 	
 123:Src/main.c    **** 		LCD_ShowString(10,80,240,24,24,(uint8_t *)"TFTLCD TEST");
 124:Src/main.c    **** 		LCD_ShowString(10,110,240,16,16,(uint8_t *)"ATOM@ALIENTEK");
 125:Src/main.c    ****  		LCD_ShowString(10,130,240,16,16,(uint8_t *)lcd_id);		//显示LCD ID	      					 
 126:Src/main.c    **** 		LCD_ShowString(10,150,240,12,12,(uint8_t *)"2016/1/6");	      					 
 127:Src/main.c    **** 		x++;
 128:Src/main.c    **** 		if(x==12)x=0;
 129:Src/main.c    ****     HAL_Delay(1000);
 130:Src/main.c    ****     /* USER CODE END WHILE */
 131:Src/main.c    **** 
 132:Src/main.c    ****     /* USER CODE BEGIN 3 */
 133:Src/main.c    ****   }
 134:Src/main.c    ****   /* USER CODE END 3 */
 135:Src/main.c    **** }
 136:Src/main.c    **** 
 137:Src/main.c    **** /**
 138:Src/main.c    ****   * @brief System Clock Configuration
 139:Src/main.c    ****   * @retval None
 140:Src/main.c    ****   */
 141:Src/main.c    **** void SystemClock_Config(void)
 142:Src/main.c    **** {
  29              		.loc 1 142 1 view -0
  30              		.cfi_startproc
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 4


  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 143 3 view .LVU1
  43              		.loc 1 143 22 is_stmt 0 view .LVU2
  44 0004 3022     		movs	r2, #48
  45 0006 0021     		movs	r1, #0
  46 0008 08A8     		add	r0, sp, #32
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 144 3 is_stmt 1 view .LVU3
  50              		.loc 1 144 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 0394     		str	r4, [sp, #12]
  53 0012 0494     		str	r4, [sp, #16]
  54 0014 0594     		str	r4, [sp, #20]
  55 0016 0694     		str	r4, [sp, #24]
  56 0018 0794     		str	r4, [sp, #28]
 145:Src/main.c    **** 
 146:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 147:Src/main.c    ****   */
 148:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 148 3 is_stmt 1 view .LVU5
  58              	.LBB2:
  59              		.loc 1 148 3 view .LVU6
  60 001a 0194     		str	r4, [sp, #4]
  61              		.loc 1 148 3 view .LVU7
  62 001c 1C4B     		ldr	r3, .L3
  63 001e 1A6C     		ldr	r2, [r3, #64]
  64 0020 42F08052 		orr	r2, r2, #268435456
  65 0024 1A64     		str	r2, [r3, #64]
  66              		.loc 1 148 3 view .LVU8
  67 0026 1B6C     		ldr	r3, [r3, #64]
  68 0028 03F08053 		and	r3, r3, #268435456
  69 002c 0193     		str	r3, [sp, #4]
  70              		.loc 1 148 3 view .LVU9
  71 002e 019B     		ldr	r3, [sp, #4]
  72              	.LBE2:
  73              		.loc 1 148 3 view .LVU10
 149:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  74              		.loc 1 149 3 view .LVU11
  75              	.LBB3:
  76              		.loc 1 149 3 view .LVU12
  77 0030 0294     		str	r4, [sp, #8]
  78              		.loc 1 149 3 view .LVU13
  79 0032 184B     		ldr	r3, .L3+4
  80 0034 1A68     		ldr	r2, [r3]
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 5


  81 0036 42F48042 		orr	r2, r2, #16384
  82 003a 1A60     		str	r2, [r3]
  83              		.loc 1 149 3 view .LVU14
  84 003c 1B68     		ldr	r3, [r3]
  85 003e 03F48043 		and	r3, r3, #16384
  86 0042 0293     		str	r3, [sp, #8]
  87              		.loc 1 149 3 view .LVU15
  88 0044 029B     		ldr	r3, [sp, #8]
  89              	.LBE3:
  90              		.loc 1 149 3 view .LVU16
 150:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.c    ****   */
 152:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  91              		.loc 1 152 3 view .LVU17
  92              		.loc 1 152 36 is_stmt 0 view .LVU18
  93 0046 0123     		movs	r3, #1
  94 0048 0893     		str	r3, [sp, #32]
 153:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  95              		.loc 1 153 3 is_stmt 1 view .LVU19
  96              		.loc 1 153 30 is_stmt 0 view .LVU20
  97 004a 4FF48033 		mov	r3, #65536
  98 004e 0993     		str	r3, [sp, #36]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  99              		.loc 1 154 3 is_stmt 1 view .LVU21
 100              		.loc 1 154 34 is_stmt 0 view .LVU22
 101 0050 0225     		movs	r5, #2
 102 0052 0E95     		str	r5, [sp, #56]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 103              		.loc 1 155 3 is_stmt 1 view .LVU23
 104              		.loc 1 155 35 is_stmt 0 view .LVU24
 105 0054 4FF48003 		mov	r3, #4194304
 106 0058 0F93     		str	r3, [sp, #60]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 107              		.loc 1 156 3 is_stmt 1 view .LVU25
 108              		.loc 1 156 30 is_stmt 0 view .LVU26
 109 005a 0823     		movs	r3, #8
 110 005c 1093     		str	r3, [sp, #64]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 111              		.loc 1 157 3 is_stmt 1 view .LVU27
 112              		.loc 1 157 30 is_stmt 0 view .LVU28
 113 005e 4FF4A873 		mov	r3, #336
 114 0062 1193     		str	r3, [sp, #68]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 115              		.loc 1 158 3 is_stmt 1 view .LVU29
 116              		.loc 1 158 30 is_stmt 0 view .LVU30
 117 0064 1295     		str	r5, [sp, #72]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 118              		.loc 1 159 3 is_stmt 1 view .LVU31
 119              		.loc 1 159 30 is_stmt 0 view .LVU32
 120 0066 0423     		movs	r3, #4
 121 0068 1393     		str	r3, [sp, #76]
 160:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 122              		.loc 1 160 3 is_stmt 1 view .LVU33
 123              		.loc 1 160 7 is_stmt 0 view .LVU34
 124 006a 08A8     		add	r0, sp, #32
 125 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 126              	.LVL1:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 6


 161:Src/main.c    ****   {
 162:Src/main.c    ****     Error_Handler();
 163:Src/main.c    ****   }
 164:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 165:Src/main.c    ****   */
 166:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 127              		.loc 1 166 3 is_stmt 1 view .LVU35
 128              		.loc 1 166 31 is_stmt 0 view .LVU36
 129 0070 0F23     		movs	r3, #15
 130 0072 0393     		str	r3, [sp, #12]
 167:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 131              		.loc 1 168 3 is_stmt 1 view .LVU37
 132              		.loc 1 168 34 is_stmt 0 view .LVU38
 133 0074 0495     		str	r5, [sp, #16]
 169:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 134              		.loc 1 169 3 is_stmt 1 view .LVU39
 135              		.loc 1 169 35 is_stmt 0 view .LVU40
 136 0076 0594     		str	r4, [sp, #20]
 170:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 137              		.loc 1 170 3 is_stmt 1 view .LVU41
 138              		.loc 1 170 36 is_stmt 0 view .LVU42
 139 0078 4FF4A053 		mov	r3, #5120
 140 007c 0693     		str	r3, [sp, #24]
 171:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 141              		.loc 1 171 3 is_stmt 1 view .LVU43
 142              		.loc 1 171 36 is_stmt 0 view .LVU44
 143 007e 4FF48053 		mov	r3, #4096
 144 0082 0793     		str	r3, [sp, #28]
 172:Src/main.c    **** 
 173:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 145              		.loc 1 173 3 is_stmt 1 view .LVU45
 146              		.loc 1 173 7 is_stmt 0 view .LVU46
 147 0084 0521     		movs	r1, #5
 148 0086 03A8     		add	r0, sp, #12
 149 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 150              	.LVL2:
 174:Src/main.c    ****   {
 175:Src/main.c    ****     Error_Handler();
 176:Src/main.c    ****   }
 177:Src/main.c    **** }
 151              		.loc 1 177 1 view .LVU47
 152 008c 15B0     		add	sp, sp, #84
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 12
 155              		@ sp needed
 156 008e 30BD     		pop	{r4, r5, pc}
 157              	.L4:
 158              		.align	2
 159              	.L3:
 160 0090 00380240 		.word	1073887232
 161 0094 00700040 		.word	1073770496
 162              		.cfi_endproc
 163              	.LFE134:
 165              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 166              		.align	2
 167              	.LC0:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 7


 168 0000 4C434420 		.ascii	"LCD ID:%04X\000"
 168      49443A25 
 168      30345800 
 169              		.align	2
 170              	.LC1:
 171 000c 41706F6C 		.ascii	"Apollo STM32F4/F7\000"
 171      6C6F2053 
 171      544D3332 
 171      46342F46 
 171      3700
 172 001e 0000     		.align	2
 173              	.LC2:
 174 0020 5446544C 		.ascii	"TFTLCD TEST\000"
 174      43442054 
 174      45535400 
 175              		.align	2
 176              	.LC3:
 177 002c 41544F4D 		.ascii	"ATOM@ALIENTEK\000"
 177      40414C49 
 177      454E5445 
 177      4B00
 178 003a 0000     		.align	2
 179              	.LC4:
 180 003c 32303136 		.ascii	"2016/1/6\000"
 180      2F312F36 
 180      00
 181              		.section	.text.main,"ax",%progbits
 182              		.align	1
 183              		.global	main
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	main:
 190              	.LFB133:
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
 191              		.loc 1 68 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 16
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 30B5     		push	{r4, r5, lr}
 196              	.LCFI3:
 197              		.cfi_def_cfa_offset 12
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 5, -8
 200              		.cfi_offset 14, -4
 201 0002 87B0     		sub	sp, sp, #28
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 40
  70:Src/main.c    ****   uint8_t lcd_id[12];
 204              		.loc 1 70 3 view .LVU49
 205              	.LVL3:
  71:Src/main.c    ****   /* USER CODE END 1 */
 206              		.loc 1 71 3 view .LVU50
  78:Src/main.c    **** 
 207              		.loc 1 78 3 view .LVU51
 208 0004 FFF7FEFF 		bl	HAL_Init
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 8


 209              	.LVL4:
  85:Src/main.c    **** 
 210              		.loc 1 85 3 view .LVU52
 211 0008 FFF7FEFF 		bl	SystemClock_Config
 212              	.LVL5:
  92:Src/main.c    ****   MX_FSMC_Init();
 213              		.loc 1 92 3 view .LVU53
 214 000c FFF7FEFF 		bl	MX_GPIO_Init
 215              	.LVL6:
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
 216              		.loc 1 93 3 view .LVU54
 217 0010 FFF7FEFF 		bl	MX_FSMC_Init
 218              	.LVL7:
  95:Src/main.c    ****   POINT_COLOR = RED;
 219              		.loc 1 95 3 view .LVU55
 220 0014 FFF7FEFF 		bl	LCD_Init
 221              	.LVL8:
  96:Src/main.c    ****   sprintf((char *)lcd_id,"LCD ID:%04X",lcddev.id);
 222              		.loc 1 96 3 view .LVU56
  96:Src/main.c    ****   sprintf((char *)lcd_id,"LCD ID:%04X",lcddev.id);
 223              		.loc 1 96 15 is_stmt 0 view .LVU57
 224 0018 4E4B     		ldr	r3, .L24
 225 001a 4FF47842 		mov	r2, #63488
 226 001e 1A60     		str	r2, [r3]
  97:Src/main.c    ****   /* USER CODE END 2 */
 227              		.loc 1 97 3 is_stmt 1 view .LVU58
 228 0020 4D4B     		ldr	r3, .L24+4
 229 0022 9A88     		ldrh	r2, [r3, #4]
 230 0024 4D49     		ldr	r1, .L24+8
 231 0026 03A8     		add	r0, sp, #12
 232 0028 FFF7FEFF 		bl	sprintf
 233              	.LVL9:
  70:Src/main.c    ****   uint8_t lcd_id[12];
 234              		.loc 1 70 11 is_stmt 0 view .LVU59
 235 002c 0024     		movs	r4, #0
 236 002e 3EE0     		b	.L21
 237              	.LVL10:
 238              	.L19:
 108:Src/main.c    ****     case 1:LCD_Clear(BLACK);break;
 239              		.loc 1 108 12 is_stmt 1 view .LVU60
 240 0030 4FF6FF70 		movw	r0, #65535
 241 0034 FFF7FEFF 		bl	LCD_Clear
 242              	.LVL11:
 108:Src/main.c    ****     case 1:LCD_Clear(BLACK);break;
 243              		.loc 1 108 29 view .LVU61
 244              	.L6:
 121:Src/main.c    ****     LCD_ShowString(10,40,240,32,32,(uint8_t *)"Apollo STM32F4/F7"); 	
 245              		.loc 1 121 5 view .LVU62
 121:Src/main.c    ****     LCD_ShowString(10,40,240,32,32,(uint8_t *)"Apollo STM32F4/F7"); 	
 246              		.loc 1 121 17 is_stmt 0 view .LVU63
 247 0038 464B     		ldr	r3, .L24
 248 003a 4FF47842 		mov	r2, #63488
 249 003e 1A60     		str	r2, [r3]
 122:Src/main.c    **** 		LCD_ShowString(10,80,240,24,24,(uint8_t *)"TFTLCD TEST");
 250              		.loc 1 122 5 is_stmt 1 view .LVU64
 251 0040 474B     		ldr	r3, .L24+12
 252 0042 0193     		str	r3, [sp, #4]
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 9


 253 0044 2023     		movs	r3, #32
 254 0046 0093     		str	r3, [sp]
 255 0048 F022     		movs	r2, #240
 256 004a 2821     		movs	r1, #40
 257 004c 0A20     		movs	r0, #10
 258 004e FFF7FEFF 		bl	LCD_ShowString
 259              	.LVL12:
 123:Src/main.c    **** 		LCD_ShowString(10,110,240,16,16,(uint8_t *)"ATOM@ALIENTEK");
 260              		.loc 1 123 3 view .LVU65
 261 0052 444B     		ldr	r3, .L24+16
 262 0054 0193     		str	r3, [sp, #4]
 263 0056 1823     		movs	r3, #24
 264 0058 0093     		str	r3, [sp]
 265 005a F022     		movs	r2, #240
 266 005c 5021     		movs	r1, #80
 267 005e 0A20     		movs	r0, #10
 268 0060 FFF7FEFF 		bl	LCD_ShowString
 269              	.LVL13:
 124:Src/main.c    ****  		LCD_ShowString(10,130,240,16,16,(uint8_t *)lcd_id);		//显示LCD ID	      					 
 270              		.loc 1 124 3 view .LVU66
 271 0064 404B     		ldr	r3, .L24+20
 272 0066 0193     		str	r3, [sp, #4]
 273 0068 1025     		movs	r5, #16
 274 006a 0095     		str	r5, [sp]
 275 006c 2B46     		mov	r3, r5
 276 006e F022     		movs	r2, #240
 277 0070 6E21     		movs	r1, #110
 278 0072 0A20     		movs	r0, #10
 279 0074 FFF7FEFF 		bl	LCD_ShowString
 280              	.LVL14:
 125:Src/main.c    **** 		LCD_ShowString(10,150,240,12,12,(uint8_t *)"2016/1/6");	      					 
 281              		.loc 1 125 4 view .LVU67
 282 0078 03AB     		add	r3, sp, #12
 283 007a 0193     		str	r3, [sp, #4]
 284 007c 0095     		str	r5, [sp]
 285 007e 2B46     		mov	r3, r5
 286 0080 F022     		movs	r2, #240
 287 0082 8221     		movs	r1, #130
 288 0084 0A20     		movs	r0, #10
 289 0086 FFF7FEFF 		bl	LCD_ShowString
 290              	.LVL15:
 126:Src/main.c    **** 		x++;
 291              		.loc 1 126 3 view .LVU68
 292 008a 384B     		ldr	r3, .L24+24
 293 008c 0193     		str	r3, [sp, #4]
 294 008e 0C23     		movs	r3, #12
 295 0090 0093     		str	r3, [sp]
 296 0092 F022     		movs	r2, #240
 297 0094 9621     		movs	r1, #150
 298 0096 0A20     		movs	r0, #10
 299 0098 FFF7FEFF 		bl	LCD_ShowString
 300              	.LVL16:
 127:Src/main.c    **** 		if(x==12)x=0;
 301              		.loc 1 127 3 view .LVU69
 127:Src/main.c    **** 		if(x==12)x=0;
 302              		.loc 1 127 4 is_stmt 0 view .LVU70
 303 009c 0134     		adds	r4, r4, #1
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 10


 304              	.LVL17:
 127:Src/main.c    **** 		if(x==12)x=0;
 305              		.loc 1 127 4 view .LVU71
 306 009e E4B2     		uxtb	r4, r4
 307              	.LVL18:
 128:Src/main.c    ****     HAL_Delay(1000);
 308              		.loc 1 128 3 is_stmt 1 view .LVU72
 128:Src/main.c    ****     HAL_Delay(1000);
 309              		.loc 1 128 5 is_stmt 0 view .LVU73
 310 00a0 0C2C     		cmp	r4, #12
 311 00a2 00D1     		bne	.L20
 128:Src/main.c    ****     HAL_Delay(1000);
 312              		.loc 1 128 13 view .LVU74
 313 00a4 0024     		movs	r4, #0
 314              	.LVL19:
 315              	.L20:
 129:Src/main.c    ****     /* USER CODE END WHILE */
 316              		.loc 1 129 5 is_stmt 1 view .LVU75
 317 00a6 4FF47A70 		mov	r0, #1000
 318 00aa FFF7FEFF 		bl	HAL_Delay
 319              	.LVL20:
 104:Src/main.c    ****   {
 320              		.loc 1 104 9 view .LVU76
 321              	.L21:
 104:Src/main.c    ****   {
 322              		.loc 1 104 3 view .LVU77
 106:Src/main.c    ****     {
 323              		.loc 1 106 5 view .LVU78
 324 00ae 0B2C     		cmp	r4, #11
 325 00b0 C2D8     		bhi	.L6
 326 00b2 01A3     		adr	r3, .L8
 327 00b4 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 328              		.p2align 2
 329              	.L8:
 330 00b8 31000000 		.word	.L19+1
 331 00bc E9000000 		.word	.L18+1
 332 00c0 F1000000 		.word	.L17+1
 333 00c4 F9000000 		.word	.L16+1
 334 00c8 03010000 		.word	.L15+1
 335 00cc 0D010000 		.word	.L14+1
 336 00d0 17010000 		.word	.L13+1
 337 00d4 21010000 		.word	.L12+1
 338 00d8 2B010000 		.word	.L11+1
 339 00dc 35010000 		.word	.L10+1
 340 00e0 3F010000 		.word	.L9+1
 341 00e4 49010000 		.word	.L7+1
 342              		.p2align 1
 343              	.L18:
 109:Src/main.c    **** 		case 2:LCD_Clear(BLUE);break;
 344              		.loc 1 109 12 view .LVU79
 345 00e8 0020     		movs	r0, #0
 346 00ea FFF7FEFF 		bl	LCD_Clear
 347              	.LVL21:
 109:Src/main.c    **** 		case 2:LCD_Clear(BLUE);break;
 348              		.loc 1 109 29 view .LVU80
 109:Src/main.c    **** 		case 2:LCD_Clear(BLUE);break;
 349              		.loc 1 109 5 is_stmt 0 view .LVU81
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 11


 350 00ee A3E7     		b	.L6
 351              	.L17:
 110:Src/main.c    **** 		case 3:LCD_Clear(RED);break;
 352              		.loc 1 110 10 is_stmt 1 view .LVU82
 353 00f0 1F20     		movs	r0, #31
 354 00f2 FFF7FEFF 		bl	LCD_Clear
 355              	.LVL22:
 110:Src/main.c    **** 		case 3:LCD_Clear(RED);break;
 356              		.loc 1 110 26 view .LVU83
 110:Src/main.c    **** 		case 3:LCD_Clear(RED);break;
 357              		.loc 1 110 3 is_stmt 0 view .LVU84
 358 00f6 9FE7     		b	.L6
 359              	.L16:
 111:Src/main.c    **** 		case 4:LCD_Clear(MAGENTA);break;
 360              		.loc 1 111 10 is_stmt 1 view .LVU85
 361 00f8 4FF47840 		mov	r0, #63488
 362 00fc FFF7FEFF 		bl	LCD_Clear
 363              	.LVL23:
 111:Src/main.c    **** 		case 4:LCD_Clear(MAGENTA);break;
 364              		.loc 1 111 25 view .LVU86
 111:Src/main.c    **** 		case 4:LCD_Clear(MAGENTA);break;
 365              		.loc 1 111 3 is_stmt 0 view .LVU87
 366 0100 9AE7     		b	.L6
 367              	.L15:
 112:Src/main.c    **** 		case 5:LCD_Clear(GREEN);break;
 368              		.loc 1 112 10 is_stmt 1 view .LVU88
 369 0102 4FF61F00 		movw	r0, #63519
 370 0106 FFF7FEFF 		bl	LCD_Clear
 371              	.LVL24:
 112:Src/main.c    **** 		case 5:LCD_Clear(GREEN);break;
 372              		.loc 1 112 29 view .LVU89
 112:Src/main.c    **** 		case 5:LCD_Clear(GREEN);break;
 373              		.loc 1 112 3 is_stmt 0 view .LVU90
 374 010a 95E7     		b	.L6
 375              	.L14:
 113:Src/main.c    **** 		case 6:LCD_Clear(CYAN);break; 
 376              		.loc 1 113 10 is_stmt 1 view .LVU91
 377 010c 4FF4FC60 		mov	r0, #2016
 378 0110 FFF7FEFF 		bl	LCD_Clear
 379              	.LVL25:
 113:Src/main.c    **** 		case 6:LCD_Clear(CYAN);break; 
 380              		.loc 1 113 27 view .LVU92
 113:Src/main.c    **** 		case 6:LCD_Clear(CYAN);break; 
 381              		.loc 1 113 3 is_stmt 0 view .LVU93
 382 0114 90E7     		b	.L6
 383              	.L13:
 114:Src/main.c    **** 		case 7:LCD_Clear(YELLOW);break;
 384              		.loc 1 114 10 is_stmt 1 view .LVU94
 385 0116 47F6FF70 		movw	r0, #32767
 386 011a FFF7FEFF 		bl	LCD_Clear
 387              	.LVL26:
 114:Src/main.c    **** 		case 7:LCD_Clear(YELLOW);break;
 388              		.loc 1 114 26 view .LVU95
 114:Src/main.c    **** 		case 7:LCD_Clear(YELLOW);break;
 389              		.loc 1 114 3 is_stmt 0 view .LVU96
 390 011e 8BE7     		b	.L6
 391              	.L12:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 12


 115:Src/main.c    **** 		case 8:LCD_Clear(BRRED);break;
 392              		.loc 1 115 10 is_stmt 1 view .LVU97
 393 0120 4FF6E070 		movw	r0, #65504
 394 0124 FFF7FEFF 		bl	LCD_Clear
 395              	.LVL27:
 115:Src/main.c    **** 		case 8:LCD_Clear(BRRED);break;
 396              		.loc 1 115 28 view .LVU98
 115:Src/main.c    **** 		case 8:LCD_Clear(BRRED);break;
 397              		.loc 1 115 3 is_stmt 0 view .LVU99
 398 0128 86E7     		b	.L6
 399              	.L11:
 116:Src/main.c    **** 		case 9:LCD_Clear(GRAY);break;
 400              		.loc 1 116 10 is_stmt 1 view .LVU100
 401 012a 4FF60740 		movw	r0, #64519
 402 012e FFF7FEFF 		bl	LCD_Clear
 403              	.LVL28:
 116:Src/main.c    **** 		case 9:LCD_Clear(GRAY);break;
 404              		.loc 1 116 27 view .LVU101
 116:Src/main.c    **** 		case 9:LCD_Clear(GRAY);break;
 405              		.loc 1 116 3 is_stmt 0 view .LVU102
 406 0132 81E7     		b	.L6
 407              	.L10:
 117:Src/main.c    **** 		case 10:LCD_Clear(LGRAY);break;
 408              		.loc 1 117 10 is_stmt 1 view .LVU103
 409 0134 48F23040 		movw	r0, #33840
 410 0138 FFF7FEFF 		bl	LCD_Clear
 411              	.LVL29:
 117:Src/main.c    **** 		case 10:LCD_Clear(LGRAY);break;
 412              		.loc 1 117 26 view .LVU104
 117:Src/main.c    **** 		case 10:LCD_Clear(LGRAY);break;
 413              		.loc 1 117 3 is_stmt 0 view .LVU105
 414 013c 7CE7     		b	.L6
 415              	.L9:
 118:Src/main.c    **** 		case 11:LCD_Clear(BROWN);break;
 416              		.loc 1 118 11 is_stmt 1 view .LVU106
 417 013e 4CF21860 		movw	r0, #50712
 418 0142 FFF7FEFF 		bl	LCD_Clear
 419              	.LVL30:
 118:Src/main.c    **** 		case 11:LCD_Clear(BROWN);break;
 420              		.loc 1 118 28 view .LVU107
 118:Src/main.c    **** 		case 11:LCD_Clear(BROWN);break;
 421              		.loc 1 118 3 is_stmt 0 view .LVU108
 422 0146 77E7     		b	.L6
 423              	.L7:
 119:Src/main.c    ****     }
 424              		.loc 1 119 11 is_stmt 1 view .LVU109
 425 0148 4BF64040 		movw	r0, #48192
 426 014c FFF7FEFF 		bl	LCD_Clear
 427              	.LVL31:
 119:Src/main.c    ****     }
 428              		.loc 1 119 28 view .LVU110
 119:Src/main.c    ****     }
 429              		.loc 1 119 3 is_stmt 0 view .LVU111
 430 0150 72E7     		b	.L6
 431              	.L25:
 432 0152 00BF     		.align	2
 433              	.L24:
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 13


 434 0154 00000000 		.word	POINT_COLOR
 435 0158 00000000 		.word	lcddev
 436 015c 00000000 		.word	.LC0
 437 0160 0C000000 		.word	.LC1
 438 0164 20000000 		.word	.LC2
 439 0168 2C000000 		.word	.LC3
 440 016c 3C000000 		.word	.LC4
 441              		.cfi_endproc
 442              	.LFE133:
 444              		.section	.text.Error_Handler,"ax",%progbits
 445              		.align	1
 446              		.global	Error_Handler
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	Error_Handler:
 453              	.LFB135:
 178:Src/main.c    **** 
 179:Src/main.c    **** /* USER CODE BEGIN 4 */
 180:Src/main.c    **** 
 181:Src/main.c    **** /* USER CODE END 4 */
 182:Src/main.c    **** 
 183:Src/main.c    **** /**
 184:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 185:Src/main.c    ****   * @retval None
 186:Src/main.c    ****   */
 187:Src/main.c    **** void Error_Handler(void)
 188:Src/main.c    **** {
 454              		.loc 1 188 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 189:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 190:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 193:Src/main.c    **** }
 459              		.loc 1 193 1 view .LVU113
 460 0000 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE135:
 464              		.text
 465              	.Letext0:
 466              		.file 2 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_defa
 467              		.file 3 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h
 468              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 469              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 470              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 471              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 472              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 473              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 474              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 475              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fsmc.h"
 476              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sram.h"
 477              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 14


 478              		.file 14 "Inc/fsmc.h"
 479              		.file 15 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 480              		.file 16 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h
 481              		.file 17 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\inclu
 482              		.file 18 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 483              		.file 19 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\stdlib.h"
 484              		.file 20 "Inc/lcd.h"
 485              		.file 21 "Inc/gpio.h"
 486              		.file 22 "d:\\tools\\stm32-vscode\\arm-gcc\\9 2019-q4-major\\arm-none-eabi\\include\\stdio.h"
 487              		.file 23 "<built-in>"
ARM GAS  D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:18     .text.SystemClock_Config:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:26     .text.SystemClock_Config:00000000 SystemClock_Config
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:160    .text.SystemClock_Config:00000090 $d
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:166    .rodata.main.str1.4:00000000 $d
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:182    .text.main:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:189    .text.main:00000000 main
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:330    .text.main:000000b8 $d
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:342    .text.main:000000e8 $t
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:434    .text.main:00000154 $d
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:445    .text.Error_Handler:00000000 $t
D:\Tools\STM32-VScode\msys2\tmp\ccQ3Cg7K.s:452    .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_FSMC_Init
LCD_Init
sprintf
LCD_Clear
LCD_ShowString
HAL_Delay
POINT_COLOR
lcddev
